{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "BarChart.svelte",
    "ColumnChart.svelte",
    "DotPlotChart.svelte",
    "LineChart.svelte",
    "ScatterChart.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "Bar.svelte",
    "Column.svelte",
    "Export.svelte",
    "Footer.svelte",
    "Labels.svelte",
    "Legend.svelte",
    "Line.svelte",
    "Subtitle.svelte",
    "Title.svelte",
    "Voronoi.svelte",
    "Map.svelte",
    "MapTooltip.svelte",
    "action-tooltip.svelte",
    "tooltip.svelte",
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte",
    "bubblechart.svelte",
    "swatches.svelte",
    "Arrow.svelte",
    "Em.svelte",
    "Toggle.svelte"
  ],
  "sourcesContent": [
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleBand, scaleOrdinal, scaleLinear, scaleSymlog } from 'd3-scale';\n  import { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { groupData, commas } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport Bar from './shared/Bar.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Subtitle from './shared/Subtitle.svelte';\n\timport Footer from './shared/Footer.svelte';\n\timport Export from './shared/Export.svelte';\n\timport Table from './shared/Table.svelte';\n\n  export let data;\n\texport let barHeight = 40; // height of individual bar (overridden if height is set)\n\texport let height = null; // number of pixels or valid css height string\n\texport let ssr = false;\n\texport let ssrWidth = 300; // for SSR only. Must be a number\n\texport let ssrHeight = typeof height == 'number' ? height : 300; // for SSR only. Number, or calculated from 'height'\n  export let animation = true;\n  export let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let zKey = null;\n\texport let idKey = yKey;\n\texport let xScale = 'linear';\n\texport let xFormatTick = commas;\n\texport let yWrapTicks = true;\n\texport let xMax = null;\n\texport let xMin = null;\n  export let xAxis = true;\n  export let yAxis = true;\n\texport let xTicks = 4;\n\texport let zDomain = null;\n\texport let textColor = '#666';\n\texport let tickColor = '#ccc';\n\texport let tickDashed = false;\n\texport let title = null;\n\texport let subtitle = null;\n\texport let alt = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let table = false;\n\texport let snapTicks = false;\n\texport let mode = 'default'; // options: 'default', 'comparison', 'marker', 'stacked', 'grouped'\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n\texport let markerWidth = 2.5;\n\texport let spacing = 0.2; // proportion of bar width (1 = 100%)\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = 'orange';\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = 'black';\n\texport let highlighted = [];\n\texport let colorHighlight = 'black';\n\texport let overlayFill = false;\n\texport let output = null;\n\n\tlet el; // Chart DOM element\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach(key => {\n\t\t\tlet pos = 0;\n\t\t\tlet neg = 0;\n\t\t\tlet vals = data.filter(d => d[yKey] == key).map(d => d[xKey]);\n\t\t\tvals.forEach(d => {\n\t\t\t\tif (d >= 0) { pos += d } else { neg += d }; \n\t\t\t});\n\t\t\tif (pos != 0) arr.push(pos);\n\t\t\tif (neg != 0) arr.push(neg);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to update xDomain\n\tfunction xDomSet(data, mode, xKey, xMax) {\n\t\tlet vals = mode == 'stacked' && zKey ? getTotals(data, data.map(d => d[yKey]).filter(distinct)) : data.map(d => d[xKey]);\n\t\tlet min = xMin ? xMin : Math.min(...vals) > 0 ? 0 : Math.min(...vals);\n\t\tlet max = xMax ? xMax : Math.max(...vals) < 0 ? 0 : Math.max(...vals);\n\t\treturn [min, max];\n\t}\n\tfunction xDomUpdate(data, mode, xKey, xMax) {\n\t\tlet newXDom = xDomSet(data, mode, xKey, xMax);\n\t\tif (newXDom[0] != xDom[0] || newXDom[1] != xDom[1]) {\n\t\t\txDomain.set(newXDom, {duration: animation ? duration : 0});\n\t\t\txDom = newXDom;\n\t\t}\n\t}\n\tlet xDom = xDomSet(data, mode, xKey, xMax);\n\tconst xDomain = tweened(xDom, tweenOptions);\n\t$: xDomUpdate(data, mode, xKey, xMax);\n\n\t// Functions to update yDomain & zDomain\n\t$: yDomain = data.map(d => d[yKey]).filter(distinct);\n\t$: _zDomain = Array.isArray(zDomain) ? zDomain :\n\t\tzKey && typeof zDomain === \"function\" ? data.map(d => d[zKey]).filter(distinct).sort(zDomain) : \n\t\tzKey ? data.map(d => d[zKey]).filter(distinct) : null;\n\n\t// Create a data series for each zKey (group)\n\t$: groupedData = groupData(data, _zDomain, zKey);\n</script>\n\n<div bind:this={el}>\n{#if title}\n  <Title>{title}</Title>\n{/if}\n{#if subtitle}\n  <Subtitle>{subtitle}</Subtitle>\n{/if}\n{#if alt}\n\t<h5 class=\"visuallyhidden\">{alt}</h5>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? `${height}px` : height ?  height : yDomain ? `${padding.top + padding.bottom + (barHeight * yDomain.length)}px` : \"300px\" }\" aria-hidden=\"true\">\n\t<LayerCake\n\t\t{padding}\n\t\t{ssr}\n\t\theight={ssr ? ssrHeight : null}\n\t\twidth={ssr ? ssrWidth : null}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\txDomain={$xDomain}\n\t\t{yDomain}\n\t\txScale={typeof xScale == 'function' ? xScale() : xScale == 'log' ? scaleSymlog() : scaleLinear()}\n\t\tyScale={scaleBand().paddingInner(spacing).paddingOuter(spacing).round(true)}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={_zDomain}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: 'bar',\n\t\t\tmode,\n\t\t\tidKey,\n      coords,\n\t\t\tmarkerWidth,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n      animation,\n      duration\n    }}\n\t>\n\t  <SetCoords/>\n\t  <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX ticks={xTicks} formatTick={xFormatTick} {snapTicks} prefix={xPrefix} suffix={xSuffix} {textColor} {tickColor} {tickDashed}/>\n      {/if}\n      {#if yAxis}\n\t\t\t  <AxisY gridlines={false} prefix={yPrefix} suffix={ySuffix} {textColor} {tickColor} {tickDashed} wrapTicks={yWrapTicks}/>\n      {/if}\n\t\t\t<Bar {select} {selected} {hover} {hovered} {highlighted} on:hover on:select {overlayFill}/>\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t</LayerCake>\n</div>\n{#if table}\n<div class=\"visuallyhidden\">\n\t<Table {data} key1={yKey} key2={xKey}/>\n</div>\n{/if}\n<slot name=\"legend\"/>\n{#if legend && _zDomain}\n  <Legend domain={_zDomain} {colors} {markerWidth} horizontal={false} line={mode == 'barcode'} comparison={mode == 'comparison'} confidence={mode == 'confidence'}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n</div>\n{#if output}\n\t<Export {el} {data} keys={[idKey, yKey, zKey, xKey]} {title} {output}/>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n\t.visuallyhidden {\n\t\tposition: absolute; \n\t\twidth: 1px; \n\t\theight: 1px; \n\t\tmargin: -1px; \n\t\tpadding: 0; \n\t\toverflow: hidden;\n\t\tclip: rect(0,0,0,0);  \n\t\tborder: 0;\n\t}\n</style>",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleBand, scaleOrdinal, scaleLinear, scaleSymlog } from 'd3-scale';\n  import { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { groupData, commas } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport Column from './shared/Column.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Subtitle from './shared/Subtitle.svelte';\n\timport Footer from './shared/Footer.svelte';\n\timport Export from './shared/Export.svelte';\n\timport Table from './shared/Table.svelte';\n\n  export let data;\n\texport let height = 200; // number of pixels or valid css height string\n\texport let ssr = false;\n\texport let ssrWidth = 300; // for SSR only. Must be a number\n\texport let ssrHeight = typeof height == 'number' ? height : 200; // for SSR only. Number, or calculated from 'height'\n  export let animation = true;\n  export let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let zKey = null;\n\texport let idKey = xKey;\n\texport let yScale = 'linear';\n\texport let yFormatTick = commas;\n\texport let yMax = null;\n\texport let yMin = null;\n  export let xAxis = true;\n  export let yAxis = true;\n\texport let yTicks = 4;\n\texport let zDomain = null;\n\texport let title = null;\n\texport let subtitle = null;\n\texport let alt = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let table = false;\n\texport let mode = 'default'; // options: 'default', 'comparison', 'marker', 'stacked', 'grouped', 'confidence'\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n\texport let markerWidth = 2.5\n\texport let spacing = 0.2 // proportion of bar width (1 = 100%)\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = 'orange';\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = 'black';\n\texport let highlighted = [];\n\texport let colorHighlight = 'black';\n\texport let overlayFill = false;\n\texport let output = null;\n\n\tlet el; // Chart DOM element\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach(key => {\n\t\t\tlet pos = 0;\n\t\t\tlet neg = 0;\n\t\t\tlet vals = data.filter(d => d[xKey] == key).map(d => d[yKey]);\n\t\t\tvals.forEach(d => {\n\t\t\t\tif (d >= 0) { pos += d } else { neg += d }; \n\t\t\t});\n\t\t\tif (pos != 0) arr.push(pos);\n\t\t\tif (neg != 0) arr.push(neg);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to animate yDomain\n\tfunction yDomSet(data, mode, yKey, yMax) {\n\t\tlet vals = mode == 'stacked' && zKey ? getTotals(data, data.map(d => d[xKey]).filter(distinct)) : data.map(d => d[yKey]);\n\t\tlet min = yMin ? yMin : Math.min(...vals) > 0 ? 0 : Math.min(...vals);\n\t\tlet max = yMax ? yMax : Math.max(...vals) < 0 ? 0 : Math.max(...vals);\n\t\treturn [min, max];\n\t}\n\tfunction yDomUpdate(data, mode, yKey, yMax) {\n\t\tlet newYDom = yDomSet(data, mode, yKey, yMax);\n\t\tif (newYDom[0] != yDom[0] || newYDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newYDom, {duration: animation ? duration : 0});\n\t\t\tyDom = newYDom;\n\t\t}\n\t}\n\tlet yDom = yDomSet(data, mode, yKey, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\t$: yDomUpdate(data, mode, yKey, yMax);\n\n\t// Functions to update xDomain & zDomain\n\t$: xDomain = data.map(d => d[xKey]).filter(distinct);\n\t$: _zDomain = Array.isArray(zDomain) ? zDomain :\n\t\tzKey && typeof zDomain === \"function\" ? data.map(d => d[zKey]).filter(distinct).sort(zDomain) : \n\t\tzKey ? data.map(d => d[zKey]).filter(distinct) : null;\n\t\n\t// Create a data series for each zKey (group)\n\t$: groupedData = groupData(data, _zDomain, zKey);\n</script>\n\n<div bind:this={el}>\n{#if title}\n  <Title>{title}</Title>\n{/if}\n{#if subtitle}\n  <Subtitle>{subtitle}</Subtitle>\n{/if}\n{#if alt}\n\t<h5 class=\"visuallyhidden\">{alt}</h5>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? height + 'px' : height }\" aria-hidden=\"true\">\n\t<LayerCake\n\t\t{padding}\n\t\t{ssr}\n\t\theight={ssr ? ssrHeight : null}\n\t\twidth={ssr ? ssrWidth : null}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\t{xDomain}\n\t\tyDomain={$yDomain}\n\t\tzDomain={_zDomain}\n\t\txScale={scaleBand().paddingInner(spacing).paddingOuter(spacing).round(true)}\n\t\tyScale={typeof yScale == 'function' ? yScale() : yScale == 'log' ? scaleSymlog() : scaleLinear()}\n\t\tzScale={scaleOrdinal()}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: 'column',\n\t\t\tmode,\n\t\t\tidKey,\n      coords,\n\t\t\tmarkerWidth,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n      animation,\n      duration\n    }}\n\t>\n\t\t<SetCoords/>\n\t  <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX gridlines={false} prefix={xPrefix} suffix={xSuffix}/>\n      {/if}\n      {#if yAxis}\n\t\t\t  <AxisY ticks={yTicks} formatTick={yFormatTick} prefix={yPrefix} suffix={ySuffix}/>\n      {/if}\n\t\t\t<Column {select} {selected} {hover} {hovered} {highlighted} on:hover on:select {overlayFill}/>\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t</LayerCake>\n</div>\n{#if table}\n<div class=\"visuallyhidden\">\n\t<Table {data} key1={xKey} key2={yKey}/>\n</div>\n{/if}\n<slot name=\"legend\"/>\n{#if legend && _zDomain}\n  <Legend domain={_zDomain} {colors} {markerWidth} line={mode == 'barcode'} comparison={mode == 'comparison'} confidence={mode == 'confidence'}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n</div>\n{#if output}\n\t<Export {el} {data} keys={[idKey, xKey, zKey, yKey]} {title} {output}/>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n\t.visuallyhidden {\n\t\tposition: absolute; \n\t\twidth: 1px; \n\t\theight: 1px; \n\t\tmargin: -1px; \n\t\tpadding: 0; \n\t\toverflow: hidden;\n\t\tclip: rect(0,0,0,0);  \n\t\tborder: 0;\n\t}\n</style>",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleBand, scaleOrdinal, scaleLinear, scaleSymlog } from 'd3-scale';\n  import { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { groupData, commas } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport DotPlot from './shared/DotPlot.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Subtitle from './shared/Subtitle.svelte';\n\timport Footer from './shared/Footer.svelte';\n\timport Export from './shared/Export.svelte';\n\timport Table from './shared/Table.svelte';\n\n  export let data;\n\texport let barHeight = 40; // height of individual bar (overridden if height is set)\n\texport let height = null; // number of pixels or valid css height string\n\texport let ssr = false;\n\texport let ssrWidth = 300; // for SSR only. Must be a number\n\texport let ssrHeight = typeof height == 'number' ? height : 200; // for SSR only. Number, or calculated from 'height'\n  export let animation = true;\n  export let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let zKey = null;\n\texport let idKey = yKey;\n\texport let xScale = 'linear';\n\texport let xFormatTick = commas;\n\texport let xMax = null;\n\texport let xMin = null;\n  export let xAxis = true;\n  export let yAxis = true;\n\texport let xTicks = 4; // Number of ticks or array of tick values, eg [0, 10, 100, 1000]\n\texport let zDomain = null;\n\texport let textColor = '#666';\n\texport let tickColor = '#ccc';\n\texport let tickDashed = false;\n\texport let title = null;\n\texport let subtitle = null;\n\texport let alt = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let table = false;\n\texport let snapTicks = false;\n\texport let mode = 'default'; // No other options at present\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null; // Option to set a single colour\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n  export let radius = 6;\n\texport let lineWidth = 2.5;\n  export let lineColor = 'darkgrey';\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null; // idKey of hovered item(s)\n\texport let colorHover = 'orange';\n\texport let select = false; // idKey of selected item(s)\n\texport let selected = null;\n\texport let colorSelect = 'black';\n\texport let highlighted = []; // Array of idKeys to highlight multiple items\n\texport let colorHighlight = 'black';\n\texport let overlayFill = false;\n\texport let output = null;\n\n\tlet el; // Chart DOM element\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\n\t// Functions to update xDomain\n\tfunction xDomSet(data, mode, xKey, xMax) {\n\t\tlet vals = data.map(d => d[xKey]);\n\t\tlet min = xMin ? xMin : Math.min(...vals) > 0 ? 0 : Math.min(...vals);\n\t\tlet max = xMax ? xMax : Math.max(...vals) < 0 ? 0 : Math.max(...vals);\n\t\treturn [min, max];\n\t}\n\tfunction xDomUpdate(data, mode, xKey, xMax) {\n\t\tlet newXDom = xDomSet(data, mode, xKey, xMax);\n\t\tif (newXDom[0] != xDom[0] || newXDom[1] != xDom[1]) {\n\t\t\txDomain.set(newXDom, {duration: animation ? duration : 0});\n\t\t\txDom = newXDom;\n\t\t}\n\t}\n\tlet xDom = xDomSet(data, mode, xKey, xMax);\n\tconst xDomain = tweened(xDom, tweenOptions);\n\t$: xDomUpdate(data, mode, xKey, xMax);\n\n\t// Functions to update yDomain & zDomain\n\t$: yDomain = data.map(d => d[yKey]).filter(distinct);\n\t$: _zDomain = Array.isArray(zDomain) ? zDomain :\n\t\tzKey && typeof zDomain === \"function\" ? data.map(d => d[zKey]).filter(distinct).sort(zDomain) : \n\t\tzKey ? data.map(d => d[zKey]).filter(distinct) : null;\n\t\n\t// Create a data series for each yKey\n\t$: groupedData = groupData(data, yDomain, yKey);\n</script>\n\n<div bind:this={el}>\n{#if title}\n  <Title>{title}</Title>\n{/if}\n{#if subtitle}\n  <Subtitle>{subtitle}</Subtitle>\n{/if}\n{#if alt}\n\t<h5 class=\"visuallyhidden\">{alt}</h5>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? `${height}px` : height ?  height : yDomain ? `${padding.top + padding.bottom + (barHeight * yDomain.length)}px` : \"300px\" }\" aria-hidden=\"true\">\n\t<LayerCake\n\t\t{padding}\n\t\t{ssr}\n\t\theight={ssr ? ssrHeight : null}\n\t\twidth={ssr ? ssrWidth : null}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\txDomain={$xDomain}\n\t\t{yDomain}\n\t\txScale={typeof xScale == 'function' ? xScale() : xScale == 'log' ? scaleSymlog() : scaleLinear()}\n    yScale={scaleBand().round(true)}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={_zDomain}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: 'dotplot',\n\t\t\tmode,\n\t\t\tidKey,\n      coords,\n      radius,\n\t\t\tlineWidth,\n      lineColor,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n      animation,\n      duration\n    }}\n\t>\n\t  <SetCoords/>\n\t  <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX ticks={xTicks} formatTick={xFormatTick} {snapTicks} prefix={xPrefix} suffix={xSuffix} {textColor} {tickColor} {tickDashed}/>\n      {/if}\n      {#if yAxis}\n\t\t\t  <AxisY gridlines={false} prefix={yPrefix} suffix={ySuffix} {textColor} {tickColor} {tickDashed}/>\n      {/if}\n\t\t\t<DotPlot {select} {selected} {hover} {hovered} {highlighted} on:hover on:select {overlayFill}/>\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t</LayerCake>\n</div>\n{#if table}\n<div class=\"visuallyhidden\">\n\t<Table {data} key1={yKey} key2={xKey}/>\n</div>\n{/if}\n<slot name=\"legend\"/>\n{#if false && legend && _zDomain}\n  <Legend domain={_zDomain} {colors} horizontal={false} line={mode == 'barcode'} comparison={mode == 'comparison'}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n</div>\n{#if output}\n\t<Export {el} {data} keys={[idKey, xKey, zKey, yKey]} {title} {output}/>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n\t.visuallyhidden {\n\t\tposition: absolute; \n\t\twidth: 1px; \n\t\theight: 1px; \n\t\tmargin: -1px; \n\t\tpadding: 0; \n\t\toverflow: hidden;\n\t\tclip: rect(0,0,0,0);  \n\t\tborder: 0;\n\t}\n</style>",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleOrdinal, scaleLinear, scaleSymlog, scaleTime } from 'd3-scale';\n \timport { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { groupData, stackData, commas } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport Line from './shared/Line.svelte';\n\timport Area from './shared/Area.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Subtitle from './shared/Subtitle.svelte';\n\timport Footer from './shared/Footer.svelte';\n\timport Labels from './shared/Labels.svelte';\n\timport Export from './shared/Export.svelte';\n\timport Table from './shared/Table.svelte';\n\n  export let data;\n\texport let height = 200; // number of pixels or valid css height string\n\texport let ssr = false;\n\texport let ssrWidth = 300; // for SSR only. Must be a number\n\texport let ssrHeight = typeof height == 'number' ? height : 200; // for SSR only. Number, or calculated from 'height'\n\texport let animation = true;\n\texport let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let zKey = null;\n\texport let idKey = zKey;\n\texport let labelKey = idKey;\n\texport let xScale = 'linear';\n\texport let yScale = 'linear';\n\texport let yFormatTick = commas;\n\texport let xFormatTick = d => d;\n\texport let yMax = null;\n\texport let yMin = 0;\n\texport let xAxis = true;\n\texport let yAxis = true;\n\texport let xTicks = 4;\n\texport let yTicks = 4;\n\texport let xTickMarks = true;\n\texport let xForceTicks = typeof xTicks === \"number\" && xScale === 'linear';\n\texport let xGridlines = false;\n\texport let zDomain = null;\n\texport let labelWrap = true;\n\texport let title = null;\n\texport let subtitle = null;\n\texport let alt = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let labels = false;\n\texport let spreadLabels = labels === \"all\";\n\texport let labelMarker = true;\n\texport let yTrimGridlines = labels !== false;\n\texport let table = false;\n\texport let snapTicks = true;\n\texport let line = true;\n\texport let mode = 'default';\n\texport let area = mode === 'stacked';\n\texport let areaOpacity = 1;\n\texport let padding = { top: 0, bottom: 28, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n\texport let lineWidth = 2.5;\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = 'orange';\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = '#206095';\n\texport let highlighted = [];\n\texport let colorHighlight = '#206095';\n\texport let output = null;\n\n\tlet el; // Chart DOM element\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\tconst distinctTime = (d, i, arr) => arr.map(e=>e.getTime).indexOf(d.getTime())\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach(key => {\n\t\t\tlet vals = data.filter(d => d[xKey] == key).map(d => d[yKey]);\n\t\t\tlet sum = vals.reduce((acc, curr) => acc + curr);\n\t\t\tarr.push(sum);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to animate yDomain\n\tconst yDomSet = (data, mode, yKey, yMax) => yMax ? [yMin, yMax] : mode == 'stacked' && yKey ? [yMin, Math.max(...getTotals(data, data.map(d => d[xKey]).filter(distinct)))] : [yMin, Math.max(...data.map(d => d[yKey]))];\n\tfunction yDomUpdate(data, mode, yKey, yMax) {\n\t\tlet newYDom = yDomSet(data, mode, yKey, yMax);\n\t\tif (newYDom[0] != yDom[0] || newYDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newYDom, {duration: animation ? duration : 0});\n\t\t\tyDom = newYDom;\n\t\t}\n\t\n\n\t}\n\tlet yDom = yDomSet(data, mode, yKey, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\n\n\n\t$: yDomUpdate(data, mode, yKey, yMax);\n\t\n\t// Function to update zDomain\n\t$: _zDomain = Array.isArray(zDomain) ? zDomain :\n\t\tzKey && typeof zDomain === \"function\" ? data.map(d => d[zKey]).filter(distinct).sort(zDomain) : \n\t\tzKey ? data.map(d => d[zKey]).filter(distinct) : null;\n\n\t// Create a data series for each zKey (group)\n\t$: groupedData = mode == 'stacked' ? stackData(data, _zDomain, yKey, zKey) : groupData(data, _zDomain, zKey);\n</script>\n\n<div bind:this={el}>\n{#if title}\n  <Title>{title}</Title>\n{/if}\n{#if subtitle}\n  <Subtitle>{subtitle}</Subtitle>\n{/if}\n{#if alt}\n\t<h5 class=\"visuallyhidden\">{alt}</h5>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? height + 'px' : height }\" aria-hidden=\"true\">\n\t<LayerCake\n\t\t{padding}\n\t\t{ssr}\n\t\theight={ssr ? ssrHeight : null}\n\t\twidth={ssr ? ssrWidth : null}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\tyDomain={$yDomain}\n\t\txScale={typeof xScale == 'function' ? xScale() : xScale == 'time' ? scaleTime() : scaleLinear()}\n\t\tyScale={typeof yScale == 'function' ? yScale() : yScale == 'log' ? scaleSymlog() : scaleLinear()}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={_zDomain}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: 'line',\n\t\t\tmode,\n\t\t\tidKey,\n\t\t\tlabelKey,\n\t\t\tcoords,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n      animation,\n      duration\n    }}\n\t>\n\t\t<SetCoords/>\n\t  <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX ticks={xTicks} formatTick={xFormatTick} {snapTicks} prefix={xPrefix} suffix={xSuffix} gridlines={xGridlines} tickMarks={xTickMarks} forceTicks={xForceTicks}/>\n      {/if}\n      {#if yAxis}\n\t\t\t  <AxisY ticks={yTicks} formatTick={yFormatTick} prefix={yPrefix} suffix={ySuffix} trimGridlines={yTrimGridlines}/>\n      {/if}\n      {#if area}\n\t\t\t  <Area {mode} opacity={areaOpacity}/>\n      {/if}\n      {#if line}\n\t\t\t  <Line {lineWidth} {select} bind:selected {hover} bind:hovered {highlighted} on:hover on:select/>\n      {/if}\n\t\t\t{#if labels}\n\t\t\t\t<Labels {hovered} {selected} labelAll={labels === \"all\"} {spreadLabels} marker={labelMarker} textWrap={labelWrap}/>\n\t\t\t{/if}\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t</LayerCake>\n</div>\n{#if table}\n<div class=\"visuallyhidden\">\n\t<Table {data} key1={zKey} key2={xKey} key3={yKey}/>\n</div>\n{/if}\n<slot name=\"legend\"/>\n{#if legend && _zDomain}\n  <Legend domain={_zDomain} {colors} {line} markerWidth={lineWidth}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n</div>\n{#if output}\n\t<Export {el} {data} keys={[idKey, xKey, zKey, yKey]} {title} {output}/>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n\t.visuallyhidden {\n\t\tposition: absolute; \n\t\twidth: 1px; \n\t\theight: 1px; \n\t\tmargin: -1px; \n\t\tpadding: 0; \n\t\toverflow: hidden;\n\t\tclip: rect(0,0,0,0);  \n\t\tborder: 0;\n\t}\n</style>",
    "<svelte:options accessors={true} />\n\n<script>\t\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleOrdinal, scaleLinear, scaleSymlog } from 'd3-scale';\n  import { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { commas } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport Scatter from './shared/Scatter.svg.svelte';\n\timport Voronoi from './shared/Voronoi.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Subtitle from './shared/Subtitle.svelte';\n\timport Footer from './shared/Footer.svelte';\n\timport Labels from './shared/Labels.svelte';\n\timport Export from './shared/Export.svelte';\n\timport Table from './shared/Table.svelte';\n\n\texport let data;\n\texport let height = 200; // number of pixels or valid css height string\n\texport let ssr = false;\n\texport let ssrWidth = 300; // for SSR only. Must be a number\n\texport let ssrHeight = typeof height == 'number' ? height : 200; // for SSR only. Number, or calculated from 'height'\n  export let animation = true;\n  export let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = null;\n\texport let zKey = null;\n  export let rKey = null;\n\texport let idKey = xKey;\n\texport let labelKey = idKey;\n\texport let xScale = 'linear';\n\texport let yScale = 'linear';\n\texport let xFormatTick = (d) => d;\n\texport let yFormatTick = commas;\n\texport let xMax = null;\n\texport let xMin = null;\n\texport let yMax = null;\n\texport let yMin = null;\n  export let xAxis = true;\n  export let yAxis = true;\n\texport let xTicks = 4;\n  export let yTicks = 4;\n\texport let xTickMarks = true;\n\texport let xGridlines = true;\n\texport let zDomain = null;\n\texport let yFitBeeswarm = false;\n\texport let textColor = '#666';\n\texport let tickColor = '#ccc';\n\texport let tickDashed = false;\n\texport let title = null;\n\texport let subtitle = null;\n\texport let alt = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let table = false;\n\texport let labels = false;\n\texport let labelContent = null;\n\texport let snapTicks = false;\n  export let padding = { top: 18, bottom: 28, left: 35, right: 0 };\n  export let buffer = 5;\n\texport let color = null;\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n\texport let r = 4;\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = 'orange';\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = 'black';\n\texport let highlighted = [];\n\texport let colorHighlight = 'black';\n\texport let overlayFill = false;\n\texport let output = null;\n\n\tlet el; // Chart DOM element\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n  \n  const distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\n\tfunction domGet(data, key, min, max) {\n\t\tlet vals = data.map(d => d[key]);\n\t\treturn [min ? min : vals[0] ? Math.min(...vals) : -1, max ? max : vals[0] ? Math.max(...vals) : 1];\n\t}\n\tfunction xDomUpdate(data, key, min, max) {\n\t\tlet newDom = domGet(data, key, min, max);\n\t\tif (newDom[0] != xDom[0] || newDom[1] != xDom[1]) {\n\t\t\txDomain.set(newDom);\n\t\t\txDom = newDom;\n\t\t}\n\t}\n\tfunction yDomUpdate(data, key, min, max) {\n\t\tlet newDom = key ? domGet(data, key, min, max) : yDom;\n\t\tif (newDom[0] != yDom[0] || newDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newDom, {duration: animation ? duration : 0});\n\t\t\tyDom = newDom;\n\t\t}\n\t}\n\tlet xDom = domGet(data, xKey, xMin, xMax);\n\tconst xDomain = tweened(xDom, tweenOptions);\n\tlet yDom = domGet(data, yKey, yMin, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\n\t$: xDomUpdate(data, xKey, xMin, xMax);\n\t$: yDomUpdate(data, yKey, yMin, yMax);\n  $: _zDomain = Array.isArray(zDomain) ? zDomain :\n\t\tzKey && typeof zDomain === \"function\" ? data.map(d => d[zKey]).filter(distinct).sort(zDomain) : \n\t\tzKey ? data.map(d => d[zKey]).filter(distinct) : null;\n</script>\n\n<div bind:this={el}>\n{#if title}\n  <Title>{title}</Title>\n{/if}\n{#if subtitle}\n  <Subtitle>{subtitle}</Subtitle>\n{/if}\n{#if alt}\n\t<h5 class=\"visuallyhidden\">{alt}</h5>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? height + 'px' : height }\" aria-hidden=\"true\">\n\t<LayerCake\n    {padding}\n\t\t{ssr}\n\t\theight={ssr ? ssrHeight : null}\n\t\twidth={ssr ? ssrWidth : null}\n\t\tx={xKey}\n\t\ty={yKey}\n    z={zKey}\n    r={rKey}\n\t\txScale={typeof xScale == 'function' ? xScale() : xScale == 'log' ? scaleSymlog() : scaleLinear()}\n\t\tyScale={typeof yScale == 'function' ? yScale() : yScale == 'log' ? scaleSymlog() : scaleLinear()}\n    zScale={scaleOrdinal()}\n\t\txDomain={$xDomain}\n\t\tyDomain={$yDomain}\n\t\tzDomain={_zDomain}\n\t\tzRange={colors}\n    rRange={Array.isArray(r) ? r : [r, r]}\n\t\tdata={data}\n    xPadding={[buffer, buffer]}\n    yPadding={yKey ? [buffer, buffer] : null}\n    custom={{\n\t\t\ttype: 'scatter',\n\t\t\tidKey,\n\t\t\tlabelKey,\n      coords,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n\t\t\tpadding: 1,\n      animation,\n      duration,\n\t\t\tyFitBeeswarm\n    }}\n\t>\n\t  <SetCoords/>\n    <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX ticks={xTicks} formatTick={xFormatTick} {snapTicks} prefix={xPrefix} suffix={xSuffix} {textColor} {tickColor} {tickDashed} gridlines={xGridlines} tickMarks={xTickMarks}/>\n      {/if}\n      {#if yAxis && yKey}\n\t\t\t  <AxisY ticks={yTicks} formatTick={yFormatTick} prefix={yPrefix} suffix={ySuffix} {textColor} {tickColor} {tickDashed}/>\n      {/if}\n\t\t\t<Scatter {selected} {hovered} {highlighted} {overlayFill}/>\n\t\t\t{#if select || hover}\n\t\t\t\t<Voronoi {select} bind:selected {hover} bind:hovered {highlighted} on:hover on:select/>\n\t\t\t{/if}\n\t\t\t{#if labels}\n\t\t\t\t<Labels {hovered} {selected} labelAll={labels === \"all\"} content={labelContent}/>\n\t\t\t{/if}\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t</LayerCake>\n</div>\n{#if table}\n<div class=\"visuallyhidden\">\n\t<Table {data} key1={zKey} key2={xKey} key3={yKey} key4={rKey}/>\n</div>\n{/if}\n<slot name=\"legend\"/>\n{#if legend && _zDomain}\n  <Legend domain={_zDomain} {colors} markerLength={Array.isArray(r) ? r[0] * 2 : r * 2} round={true}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n</div>\n{#if output}\n\t<Export {el} {data} keys={[idKey, xKey, zKey, yKey]} {title} {output}/>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n\t.visuallyhidden {\n\t\tposition: absolute; \n\t\twidth: 1px; \n\t\theight: 1px; \n\t\tmargin: -1px; \n\t\tpadding: 0; \n\t\toverflow: hidden;\n\t\tclip: rect(0,0,0,0);  \n\t\tborder: 0;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { height, xScale, xDomain, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let tickDashed = false;\n\texport let tickMarks = false;\n\texport let tickColor = '#b3b3b3';\n\texport let textColor = '#707070';\n\texport let formatTick = d => d;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let forceTicks = false;\n\texport let dxTick = 0;\n\texport let dyTick = tickMarks ? 8 : 0;\n\texport let prefix = '';\n\texport let suffix = '';\n\n\tfunction fixTicks(domain, ticks) {\n\t\tif (\n\t\t\ttypeof ticks[0] === \"number\" &&\n\t\t\tticks.length > 1 &&\n\t\t\tticks.length < domain.length &&\n\t\t\tticks[ticks.length - 1] < domain[domain.length - 1]\n\t\t) {\n\t\t\tconst diff = domain[domain.length - 1] - ticks[ticks.length - 1];\n\t\t\treturn ticks.map(tick => tick + diff);\n\t\t}\n\t\treturn ticks;\n\t}\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\ttypeof ticks === 'function' ? ticks($xScale.ticks()) :\n\t\t\ttypeof ticks === 'number' && forceTicks ? fixTicks($xScale.ticks(), $xScale.ticks(ticks)): \n\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(tick) {\n\t\tif (snapTicks === true) {\n\t\t\tif (tick === $xDomain[0]) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (tick === $xDomain[1]) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis' class:snapTicks>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xScale(tick)},{Math.max(...$yRange)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line class=\"gridline\" class:dashed={tickDashed} y1='{$height * -1}' y2='0' x1='0' x2='0' style:stroke='{tickColor}' style:stroke-width='{tick === 0 ? 1.5 : 1}' style:filter={tick !== 0 ? `contrast(calc(1/3)) brightness(1.5)` : null}></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line class=\"tick-mark\" y1='{0}' y2='{dyTick}' x1='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}' x2='{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}' style:stroke='{tickColor}' style:stroke-width='{tick === 0 ? 1.5 : 1}' style:filter={tick !== 0 ? `contrast(calc(1/3)) brightness(1.5)` : null}></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\"\n\t\t\t\ty='{yTick}'\n\t\t\t\tdx='{dxTick}'\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(tick)}'\n\t\t\t\tfill='{textColor}'>\n\t\t\t\t\t{i == tickVals.length - 1 ? prefix + formatTick(tick) + suffix : formatTick(tick)}\n\t\t\t\t</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .8em;\n\t}\n\n\t.tick .tick-mark,\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.tick line {\n\t\tshape-rendering: crispEdges;\n\t}\n\n\t.dashed {\n\t\tstroke-dasharray: 2;\n\t}\n\t/* This looks slightly better */\n\t.axis.snapTicks .tick:last-child text {\n\t\ttransform: translateX(3px);\n\t}\n\t.axis.snapTicks .tick.tick-0 text {\n\t\ttransform: translateX(-3px);\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport wrap from '../../js/wrap';\n\n\tconst { containerWidth, padding, xRange, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let tickMarks = false;\n\texport let gridlines = true;\n\texport let trimGridlines = false;\n\texport let tickDashed = false;\n\texport let tickColor = '#b3b3b3';\n\texport let textColor = '#707070';\n\texport let formatTick = d => d;\n\texport let wrapTicks = false;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = tickMarks ? 8 : 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\texport let prefix = '';\n\texport let suffix = '';\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\t$: gridlineWidth = (() => {\n\t\tlet width = $containerWidth;\n\t\tif (isBandwidth) width -= $padding.left;\n\t\tif (trimGridlines) width -= $padding.right;\n\t\treturn width;\n\t})();\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\ttypeof ticks === 'function' ?\n\t\t\t\tticks($yScale.ticks()) :\n\t\t\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"gridline\"\n\t\t\t\t\tx1='0'\n\t\t\t\t\tx2='{gridlineWidth}'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\tclass:dashed={tickDashed}\n\t\t\t\t\tstyle:stroke='{tickColor}'\n\t\t\t\t\tstyle:stroke-width='{tick === 0 ? 1.5 : 1}'\n\t\t\t\t\tstyle:filter={tick !== 0 ? `contrast(calc(1/3)) brightness(1.5)` : null}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line\n\t\t\t\t\tclass='tick-mark'\n\t\t\t\t\tx1='0'\n\t\t\t\t\tx2='{isBandwidth ? -6 : 6}'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\tstyle:stroke='{tickColor}'\n\t\t\t\t\tstyle:stroke-width='{tick === 0 ? 1.5 : 1}'\n\t\t\t\t\tstyle:filter={tick !== 0 ? `contrast(calc(1/3)) brightness(1.5)` : null}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick + (isBandwidth ? -4 : dxTick)}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0) + (isBandwidth ? 4 : dyTick)}'\n\t\t\t\ttext-anchor='{isBandwidth ? 'end' : textAnchor}'\n\t\t\t\tfill='{textColor}'\n\t\t\t\tuse:wrap={{disable: !wrapTicks, width: $padding.left}}>\n\t\t\t\t\t{i == tickVals.length - 1 ? prefix + formatTick(tick) + suffix : formatTick(tick)}\n\t\t\t\t</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .8em;\n\t}\n\n\t.dashed {\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext, createEventDispatcher } from 'svelte';\n\t\n\tconst { data, xScale, zGet, xDomain, zRange, config, custom } = getContext('LayerCake');\n\tconst dispatch = createEventDispatcher()\n\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\texport let highlighted = [];\n\texport let overlayFill = false;\n\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\n\tlet colorHover = $custom.colorHover ? $custom.colorHover : 'orange';\n\tlet colorSelect = $custom.colorSelect ? $custom.colorSelect : 'black';\n\tlet colorHighlight = $custom.colorHighlight ? $custom.colorHighlight : 'black';\n\tlet lineWidth = $custom.lineWidth ? $custom.lineWidth : 2;\n\tlet markerWidth = $custom.markerWidth ? $custom.markerWidth : 2.5;\n\t$: mode = $custom.mode ? $custom.mode : 'default';\n\n\t$: makePoints = (x0, x1, y0, y1) => {\n\t\tx1 = Math.abs(x1 - x0) < markerWidth ? x0 + markerWidth : x1;\n\t\treturn `${x0},${y0} ${x0},${y1} ${x1},${y1} ${x1},${y0}`;\n\t};\n\t$: mapData = (coords) => {\n\t\tconst arr = [];\n\t\tfor (let i = 0; i < coords[0].length; i ++) {\n\t\t\tconst x0 = Math.min(...coords.map(d => d[i].x1));\n\t\t\tconst x1 = Math.max(...coords.map(d => d[i].x1));\n\t\t\tarr.push({x0, x1, y0: coords[0][i].y0, y1: coords[0][i].y1});\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[idKey] : null;\n\t\t\tdispatch('hover', {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[idKey] : null;\n\t\t\tdispatch('select', {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n</script>\n\n{#if $coords}\n{#if mode === \"confidence\"}\n<g class=\"line-group\">\n\t{#each mapData($coords) as d, i}\n\t\t<polygon\n\t\t\tclass='line-confidence'\n\t\t\tdata-id=\"{i}\"\n\t\t\tpoints=\"{makePoints($xScale(d.x0), $xScale(d.x1), d.y0, d.y1)}\"\n\t\t\tfill=\"{overlayFill && $data[0][i][idKey] == selected ? colorSelect : overlayFill && highlighted.includes($data[0][i][idKey]) ? colorHighlight : $config.z ? $zGet($data[0][i]) : $zRange[0]}\"\n\t\t\topacity={0.3}\n\t\t/>\n\t{/each}\n</g>\n{/if}\n<g class=\"bar-group\">\n\t{#each $coords as group, i}\n\t  {#each group as d, j}\n\t\t\t{#if !(mode === 'confidence' && i > 0)}\n\t\t  <!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t  <!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n\t\t  <polygon\n\t\t\t  class='bar-rect'\n\t\t\t  data-id=\"{j}\"\n\t\t\t\ttransform=\"translate({mode == 'barcode' || (mode == 'comparison' && i > 0) ? -markerWidth / 2 : 0} 0)\"\n\t\t\t  points=\"{makePoints($xScale(d.x0), $xScale(d.x1), d.y0, d.y1)}\"\n\t\t\t\tstroke=\"{$data[i][j][idKey] == hovered ? colorHover : $data[i][j][idKey] == selected ? colorSelect : colorHighlight}\"\n\t\t\t\tstroke-width=\"{$data[i][j][idKey] == hovered || $data[i][j][idKey] == selected || highlighted.includes($data[i][j][idKey]) ? lineWidth : 0}\"\n\t\t\t  fill=\"{overlayFill && $data[i][j][idKey] == selected ? colorSelect : overlayFill && highlighted.includes($data[i][j][idKey]) ? colorHighlight : $config.z ? $zGet($data[i][j]) : $zRange[0]}\"\n\t\t\t\ton:mouseover={hover ? (e) => doHover(e, $data[i][j]) : null}\n\t\t\t\ton:mouseleave={hover ? (e) => doHover(e, null) : null}\n\t\t\t\ton:focus={select ? (e) => doHover(e, $data[i][j]) : null}\n\t\t\t\ton:blur={select ? (e) => doHover(e, null) : null}\n\t\t\t\ton:click={select ? (e)  => doSelect(e, $data[i][j]) : null}\n\t\t\t\ttabindex=\"{hover || select ? 0 : -1}\"\n\t\t  />\n\t\t\t{/if}\n\t  {/each}\n\t{/each}\n</g>\n{/if}\n\n<style>\n\t.bar-group polygon, .line-group polygon {\n\t\tshape-rendering: crispEdges;\n\t}\n</style>",
    "<script>\n\timport { getContext, createEventDispatcher } from 'svelte';\n\n\tconst { data, yScale, zGet, zRange, config, custom } = getContext('LayerCake');\n\tconst dispatch = createEventDispatcher();\n\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\texport let highlighted = [];\n\texport let overlayFill = false;\n\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\n\tlet colorHover = $custom.colorHover ? $custom.colorHover : 'orange';\n\tlet colorSelect = $custom.colorSelect ? $custom.colorSelect : 'black';\n\tlet colorHighlight = $custom.colorHighlight ? $custom.colorHighlight : 'black';\n\tlet lineWidth = $custom.lineWidth ? $custom.lineWidth : 2;\n\tlet markerWidth = $custom.markerWidth ? $custom.markerWidth : 2.5;\n\t$: mode = $custom.mode ? $custom.mode : 'default';\n\n\t$: makePoints = (x0, x1, y0, y1) => {\n\t\ty0 = Math.abs(y1 - y0) < markerWidth ? y1 + markerWidth : y0;\n\t\treturn `${x0},${y0} ${x0},${y1} ${x1},${y1} ${x1},${y0}`;\n\t};\n\t$: mapData = (coords) => {\n\t\tconst arr = [];\n\t\tfor (let i = 0; i < coords[0].length; i ++) {\n\t\t\tconst y0 = Math.min(...coords.map(d => d[i].y1));\n\t\t\tconst y1 = Math.max(...coords.map(d => d[i].y1));\n\t\t\tarr.push({x0: coords[0][i].x0, x1: coords[0][i].x1, y0, y1});\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[idKey] : null;\n\t\t\tdispatch('hover', {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[idKey] : null;\n\t\t\tdispatch('select', {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n</script>\n\n{#if $coords}\n{#if mode === \"confidence\"}\n<g class=\"line-group\">\n\t{#each mapData($coords) as d, i}\n\t\t<polygon\n\t\t\tclass='line-confidence'\n\t\t\tdata-id=\"{i}\"\n\t\t\tpoints=\"{makePoints(d.x0, d.x1, $yScale(d.y0), $yScale(d.y1))}\"\n\t\t\tfill=\"{overlayFill && $data[0][i][idKey] == selected ? colorSelect : overlayFill && highlighted.includes($data[0][i][idKey]) ? colorHighlight : $config.z ? $zGet($data[0][i]) : $zRange[0]}\"\n\t\t\topacity={0.3}\n\t\t/>\n\t{/each}\n</g>\n{/if}\n<g class=\"column-group\">\n\t{#each $coords as group, i}\n\t  {#each group as d, j}\n\t\t\t{#if !(mode === 'confidence' && i > 0)}\n\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n\t\t\t<polygon\n\t\t\t\tclass='column-rect'\n\t\t\t\tdata-id=\"{j}\"\n\t\t\t\ttransform=\"translate(0 {mode == 'barcode' || (mode == 'comparison' && i > 0) ? -markerWidth / 2 : 0})\"\n\t\t\t  points=\"{makePoints(d.x0, d.x1, $yScale(d.y0), $yScale(d.y1))}\"\n\t\t\t\tstroke=\"{$data[i][j][idKey] == hovered ? colorHover : $data[i][j][idKey] == selected ? colorSelect : colorHighlight}\"\n\t\t\t\tstroke-width=\"{$data[i][j][idKey] == hovered || $data[i][j][idKey] == selected || highlighted.includes($data[i][j][idKey]) ? lineWidth : 0}\"\n\t\t\t\tfill=\"{overlayFill && $data[i][j][idKey] == selected ? colorSelect : overlayFill && highlighted.includes($data[i][j][idKey]) ? colorHighlight : $config.z ? $zGet($data[i][j]) : $zRange[0]}\"\n\t\t\t\ton:mouseover={hover ? (e) => doHover(e, $data[i][j]) : null}\n\t\t\t\ton:mouseleave={hover ? (e) => doHover(e, null) : null}\n\t\t\t\ton:focus={select ? (e) => doHover(e, $data[i][j]) : null}\n\t\t\t\ton:blur={select ? (e) => doHover(e, null) : null}\n\t\t\t\ton:click={select ? (e) => doSelect(e, $data[i][j]) : null}\n\t\t\t\ttabindex=\"{hover || select ? 0 : -1}\"\n\t\t\t/>\n\t\t\t{/if}\n\t  {/each}\n\t{/each}\n</g>\n{/if}\n\n<style>\n\t.column-group polygon, .line-group polygon {\n\t\tshape-rendering: crispEdges;\n\t}\n</style>",
    "<script>\n\timport { getCSV, getPNG } from '../../js/utils';\n\n  export let el;\n  export let data;\n  export let keys = [];\n  export let title = null;\n  export let output = {};\n</script>\n\n<div class=\"chart-export\">\n  {#if output.csv}\n  <button on:click={() => getCSV(data, keys, title ? title : 'chart')}>Download data (CSV)</button>\n  {/if}\n  {#if output.csv && output.png}|{/if}\n  {#if output.png}\n  <button on:click={() => getPNG(el, title ? title : 'chart')}>Download image (PNG)</button>\n  {/if}\n</div>\n\n<style>\n  .chart-export {\n    margin-top: 10px;\n\t\tfont-size: .8em;\n\t}\n  button {\n    color: #206095;\n    text-decoration: underline;\n    text-underline-position: under;\n    background: none;\n    border: none;\n    padding: 0 0 1px;\n  }\n  button:hover {\n    cursor: pointer;\n    color: #003c57;\n    text-decoration-thickness: 2px;\n  }\n  button:focus {\n    color: #222;\n    background-color: #fbc900;\n    text-decoration-thickness: 3px;\n  }\n</style>",
    "<div class=\"chart-footer\"><slot/></div>\n\n<style>\n\t.chart-footer {\n\t\tfont-size: .8em;\n\t\tcolor: grey;\n\t\tmargin-top: 5px;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { raise } from 'layercake';\n\timport wrap from '../../js/wrap';\n\timport spread from '../../js/spread-labels';\n\n\tconst { data, xScale, yScale, zGet, padding, config, custom } = getContext('LayerCake');\n\n\texport let hovered = null;\n\texport let selected = null;\n\texport let labelAll = false;\n\texport let spreadLabels = false;\n\texport let content = null;\n\texport let marker = false;\n\texport let textWrap = false;\n\t\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\tlet labelKey = $custom.labelKey;\n\tlet colorHover = $custom.colorHover ? $custom.colorHover : 'orange';\n\tlet colorSelect = $custom.colorSelect ? $custom.colorSelect : '#206095';\n\tlet radius = 8; // For spreading labels\n\n\tconst raiseMe = (e, options = {}) => { if (!options.disable) raise(e) };\n\tconst setRadius = (e, options = {}) => { if (options.first) radius = e.getBBox().height / 2 };\n\tconst addLabelCoords = (coords, radius) => {\n\t\tconst sortedIndex = Array.from(coords.keys())\n\t\t\t.sort((a, b) => coords[b][coords[b].length - 1].y - coords[a][coords[a].length - 1].y);\n\t\tconst reverseIndex = Array.from(sortedIndex.keys()).map(i => sortedIndex.indexOf(i));\n\t\tlet sortedCoords = coords.map((d, i) => coords[sortedIndex[i]]);\n\t\tconst labelYs = spread(sortedCoords.map(c => $yScale(c[c.length - 1].y)), radius);\n\t\tsortedCoords = sortedCoords.map((c, i) => {\n\t\t\tconst clone = JSON.parse(JSON.stringify(c));\n\t\t\tclone[clone.length - 1].ly = labelYs[i];\n\t\t\treturn clone;\n\t\t});\n\t\treturn reverseIndex.map(i => sortedCoords[i]);\n\t};\n\n\t$: coordsWithLabels = $coords?.[0]?.[0]?.y && spreadLabels ? addLabelCoords($coords, radius) : $coords;\n</script>\n\n{#if coordsWithLabels}\n<defs>\n\t<filter x=\"0\" y=\"0\" width=\"1\" height=\"1\" id=\"bgfill\">\n\t\t<feFlood flood-color=\"rgba(255,255,255,0.8)\" result=\"bg\" />\n\t\t<feMerge>\n\t\t\t<feMergeNode in=\"bg\"/>\n\t\t\t<feMergeNode in=\"SourceGraphic\"/>\n\t\t</feMerge>\n\t</filter>\n</defs>\n<g class=\"chart-label-group\">\n\t{#if coordsWithLabels?.[0]?.x}\n\t{#each coordsWithLabels as d, i}\n\t\t{#if labelAll || [hovered, selected].includes($data[i][idKey])}\n\t\t<text\n\t\t\tclass=\"chart-label\"\n\t\t\ttransform=\"translate(5,-5)\"\n\t\t\tfilter=\"url(#bgfill)\"\n\t\t\tfill=\"{labelAll && $config.z ? $zGet($data[i]) : $data[i][idKey] === hovered ? colorHover : colorSelect}\"\n\t\t  x={$xScale(d.x)}\n\t\t\ty={$yScale(d.y)}>\n\t\t\t{content ? content : $data[i][labelKey]}\n\t\t</text>\n\t\t{/if}\n\t{/each}\n\t{:else if coordsWithLabels?.[0]?.[0]?.x}\n\t{#each coordsWithLabels as d, i}\n\t\t{#if labelAll || [hovered, selected].includes($data[i][0][idKey])}\n\t\t{#if marker}\n\t\t<circle\n\t\t\tcx={$xScale(d[d.length - 1].x)}\n\t\t\tcy={$yScale(d[d.length - 1].y)}\n\t\t\tr=\"5\"\n\t\t\tfill=\"{labelAll && $config.z ? $zGet($data[i][0]) : $data[i][0][idKey] === hovered ? colorHover : colorSelect}\"\n\t\t\tuse:raiseMe={{disable: $data[i][0][idKey] !== hovered}}/>\n\t\t{/if}\n\t\t<text\n\t\t\tclass=\"chart-label\"\n\t\t\ttransform=\"translate({marker ? 7 : 4},3)\"\n\t\t\tfilter=\"url(#bgfill)\"\n\t\t\tfill=\"{labelAll && $config.z ? $zGet($data[i][0]) : $data[i][0][idKey] === hovered ? colorHover : colorSelect}\"\n\t\t  x={$xScale(d[d.length - 1].x)}\n\t\t\ty={spreadLabels && d[d.length - 1].ly ? d[d.length - 1].ly : $yScale(d[d.length - 1].y)}\n\t\t\tuse:wrap={{disable: !textWrap, width: $padding.right}}\n\t\t\tuse:raiseMe={{disable: $data[i][0][idKey] !== hovered}}\n\t\t\tuse:setRadius={{first: i === 0}}>\n\t\t\t{content ? content : $data[i][0][labelKey]}\n\t\t</text>\n\t\t{/if}\n\t{/each}\n\t{/if}\n</g>\n{/if}\n\n<style>\n\t.chart-label {\n\t\tfont-size: 0.8em;\n\t}\n</style>",
    "<script>\n  export let domain = null;\n  export let colors = null;\n  export let line = false; // true if line chart\n  export let comparison = false; // true if chart uses bars + markers for comparison\n  export let confidence = false; // true if chart uses confidence intervals\n  export let horizontal = true; // true if marker lines should be horizontal, false if vertical\n  export let markerWidth = 2.5;\n  export let markerLength = 13;\n  export let round = false; // to represent round markers\n\n  $: _domain = confidence ? [\"Estimate\", \"Confidence interval\"] : domain;\n</script>\n\n{#if Array.isArray(_domain) && Array.isArray(colors)}\n  <ul class=\"legend\" aria-hidden=\"true\">\n    {#each _domain as label, i}\n      <li>\n        <div\n          class=\"bullet\"\n          class:round\n          style:background-color=\"{confidence ? colors[0] : colors[i]}\"\n          style:width=\"{!horizontal && (line || (comparison && i != 0) || (confidence && i == 0)) ? markerWidth : markerLength}px\"\n          style:height=\"{horizontal && (line || (comparison && i != 0) || (confidence && i == 0)) ? markerWidth : markerLength}px\"\n          style:opacity=\"{confidence && i == 1 ? '0.3' : null}\"\n        />\n        {label}\n      </li>\n    {/each}\n  </ul>\n{/if}\n\n<style>\n  ul.legend {\n    margin: 0;\n    padding: 0;\n  }\n  ul.legend li {\n    display: inline;\n    font-size: .8em;\n  }\n  ul.legend li + li {\n    margin-left: 8px;\n  }\n  .bullet {\n\t\tdisplay: inline-block;\n    vertical-align: middle;\n    transform: translateY(-1px);\n\t}\n  .round {\n    border-radius: 50%;\n  }\n</style>",
    "<script>\n\timport { getContext, createEventDispatcher } from 'svelte';\n\timport { raise } from 'layercake';\n\n\tconst { data, xScale, yScale, zGet, config, custom } = getContext('LayerCake');\n\tconst dispatch = createEventDispatcher();\n\n\texport let lineWidth = 2.5;\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\texport let highlighted = [];\n\t\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\tlet colorHover = $custom.colorHover ? $custom.colorHover : 'orange';\n\tlet colorSelect = $custom.colorSelect ? $custom.colorSelect : '#206095';\n\tlet colorHighlight = $custom.colorHighlight ? $custom.colorHighlight : '#206095';\n\n\t// Function to make SVG path\n\tconst makePath = (group) => {\n\t\tlet path = 'M' + group\n\t\t.map(d => {\n\t\t\treturn $xScale(d.x) + ',' + $yScale(d.y);\n\t\t})\n\t\t.join('L');\n\t\treturn path;\n\t}\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[0][idKey] : null;\n\t\t\tdispatch('hover', {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[0][idKey] : null;\n\t\t\tdispatch('select', {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\tconst raiseMe = (e, options = {}) => { if (!options.disable) raise(e) };\n</script>\n\n{#if $coords}\n<g class=\"line-group\">\n\t{#each $coords as group, i}\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n\t\t<path\n\t\t  class=\"path-hover\"\n\t\t\td=\"{makePath(group)}\"\n\t\t\ton:mouseover={hover ? (e) => doHover(e, $data[i]) : null}\n\t\t\ton:mouseleave={hover ? (e) => doHover(e, null) : null}\n\t\t\ton:focus={select ? (e) => doHover(e, $data[i]) : null}\n\t\t\ton:blur={select ? (e) => doHover(e, null) : null}\n\t\t\ton:click={select ? (e) => doSelect(e, $data[i]) : null}\n\t\t\ttabindex=\"{hover || select ? 0 : -1}\"\n\t\t/>\n\t  <path\n\t\t  class=\"path-line\"\n\t\t\td=\"{makePath(group)}\"\n\t\t\tstroke=\"{\n\t\t\t\t$config.z ? $zGet($data[i][0]) : $config.zRange[0]}\"\n\t\t\tstroke-width=\"{\n\t\t\t\tlineWidth\n\t\t\t}\"\n\t\t/>\n\t{/each}\n\t\n\t{#if idKey && (hover || selected || highlighted[0])}\n\t{#each $coords as group, i}\n\t\t{#if [hovered, selected, ...highlighted].includes($data[i][0][idKey]) }\n\t  <path\n\t\t  class=\"path-overlay\"\n\t\t\td=\"{makePath(group)}\"\n\t\t\tstroke=\"{\n\t\t\t\t$data[i][0][idKey] == hovered ? colorHover :\n\t\t\t\t$data[i][0][idKey] == selected ? colorSelect :\n\t\t\t\tcolorHighlight\n\t\t\t}\"\n\t\t\tstroke-width=\"{\n\t\t\t\tlineWidth + 1.5\n\t\t\t}\"\n\t\t\tuse:raiseMe={{disable: hovered !== $data[i][0][idKey]}}\n\t\t/>\n\t\t{/if}\n\t{/each}\n\t{/if}\n</g>\n{/if}\n\n<style>\n\tpath {\n\t\tfill: none;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t}\n\t.path-hover {\n\t\tstroke: rgba(255,255,255,0);\n\t\tstroke-width: 7;\n\t}\n\t.path-line, .path-overlay {\n\t\tpointer-events: none;\n\t}\n</style>\n\n\n",
    "<div class=\"chart-subtitle\">\n\t<slot/>\n</div>\n\n<style>\n\t.chart-subtitle {\n    margin-top: -6px;\n\t\tmargin-bottom: 10px;\n\t}\n</style>",
    "<h3 class=\"chart-title\">\n\t<slot/>\n</h3>\n\n<style>\n\t.chart-title {\n\t\tfont-size: 1.1em;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 10px;\n\t}\n</style>",
    "<script>\n\timport { Delaunay } from 'd3-delaunay';\n\timport { getContext, createEventDispatcher } from 'svelte';\n\n\tconst { data, width, height, custom, xScale, yScale } = getContext('LayerCake');\n\tconst dispatch = createEventDispatcher();\n\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[idKey] : null;\n\t\t\tdispatch('hover', {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[idKey] : null;\n\t\t\tdispatch('select', {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e\n\t\t\t});\n\t\t}\n\t}\n\n\t$: coordsArray = Array.isArray($coords) ? $coords.map(d => [$xScale(d.x), $yScale(d.y)]) : [];\n\t$: voronoi = Delaunay.from(coordsArray).voronoi([0, 0, $width, $height]);\n\n</script>\n\n<style>\n\t.voronoi-cell {\n\t\tfill: none;\n\t\tstroke: none;\n\t\tpointer-events: all;\n\t}\n</style>\n\n{#if voronoi}\n<g class=\"voronoi-group\">\n{#each $data as d, i}\n\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n\t<path\n\t\tclass=\"voronoi-cell\"\n\t\td={voronoi.renderCell(i)}\n\t\ton:mouseover={hover ? e => doHover(e, $data[i]) : null}\n\t\ton:mouseleave={hover ? e => doHover(e, null) : null}\n\t\ton:focus={select ? e => doHover(e, $data[i]): null}\n\t\ton:blur={select ? e => doHover(e, null) : null}\n\t\ton:click={select ? e => doSelect(e, $data[i]) : null}\n\t\ttabindex=\"{hover || select ? 0 : -1}\"\n\t/>\n{/each}\n</g>\n{/if}\n",
    "<script>\n\timport { onMount, setContext } from \"svelte\";\n\timport mapbox from \"./lib/mapbox-gl@1.13.2\";\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n\texport let map;\n\texport let id = \"map\";\n\texport let location = {\n\t\tlng: 15,\n\t\tlat: 45,\n\t\tzoom: 1\n\t};\n\texport let style = {\n\t\t\"version\": 8,\n\t\t\"sources\": {},\n\t\t\"layers\": []\n\t};\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\texport let controls = false;\n\texport let locate = false;\n\texport let tabbable = false;\n\n\texport let zoom = null;\n\texport let center = null;\n\texport let interactive = true;\n\n\tlet container;\n\tlet w;\n\tlet h;\n\tlet options;\n\tlet loaded = false;\n\n\tsetContext(\"map\", {\n\t\tgetMap: () => map,\n\t});\n\t\n\t// Interpret location\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (typeof location.lng == 'number' && typeof location.lat == 'number') {\n\t\toptions = {\n\t\t\tcenter: [location.lng, location.lat],\n\t\t};\n\t\tif (typeof location.zoom == 'number') {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconst link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://unpkg.com/mapbox-gl@1.13.2/dist/mapbox-gl.css\";\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle,\n\t\t\t\tminZoom: minzoom,\n\t\t\t\tmaxZoom: maxzoom,\n\t\t\t\tinteractive,\n\t\t\t\t...options,\n\t\t\t});\n\t\t\t\n\t\t\tif (controls) {\n\t\t\t\tmap.addControl(new mapbox.NavigationControl({showCompass: false}));\n\t\t\t}\n\t\t\t\n\t\t\tif (locate) {\n\t\t\t\tmap.addControl(new mapbox.GeolocateControl());\n\t\t\t}\n\t\t\t\n\t\t\t// Get initial zoom level\n\t\t\tmap.on(\"load\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t\tloaded = true;\n\t\t\t\t\n\t\t\t\t// Prevent map from being tabbable\n\t\t\t\tif (!tabbable && document.querySelector(`#${id} canvas`)) {\n\t\t\t\t\tdocument.querySelector(`#${id} canvas`).tabIndex = \"-1\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Update zoom level and center when the view changes\n\t\t\tmap.on(\"moveend\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t});\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n\n\t// Function that forces map to resize to fit parent div, in case it doesn't automatically\n\tfunction resizeCanvas() {\n\t\tif (loaded) {\n\t\t\tlet canvas = document.getElementsByClassName(\"mapboxgl-canvas\");\n\t\t  if (canvas[0]) {\n\t\t\t  canvas[0].style.width = \"100%\";\n\t\t\t  canvas[0].style.height = \"100%\";\n\t\t\t  map.resize();\n\t\t  }\n\t\t}\n\t}\n\n\t// Invoke above function when parent div size changes\n\t$: (w || h) && resizeCanvas();\n</script>\n\n<div bind:clientWidth={w} bind:clientHeight={h} bind:this={container} {id}>\n\t{#if loaded}\n\t\t<slot />\n\t{/if}\n</div>\n\n<style>\n\t:global(.mapboxgl-control-container button) {\n\t\tmargin: 0;\n\t}\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>",
    "<script>\n  import { getContext } from 'svelte';\n  import mapbox from './lib/mapbox-gl@1.13.2';\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n  export let content;\n\n  const tooltip = new mapbox.Popup({\n\t\tcloseButton: false,\n\t\tcloseOnClick: false\n\t});\n\n  const { getMap } = getContext('map');\n\tconst map = getMap();\n  const hoverObj = getContext('hover');\n\n  function updateTooltip(obj, content) {\n    if (obj.id) {\n      tooltip\n\t\t\t.setLngLat(obj.event.lngLat)\n      .setHTML(content ? content : obj.code)\n      .addTo(map);\n    } else {\n      tooltip.remove();\n    }\n  }\n\n  $: updateTooltip($hoverObj, content);\n</script>\n\n<style>\n  :global(.mapboxgl-popup-content) {\n\t\tpadding: 5px 10px !important;\n\t}\n</style>",
    "<script>\n  // @ts-check\n  import { onMount, onDestroy } from 'svelte';\n\n  import {\n    computeTooltipPosition,\n    formatVariableKey,\n    getMinWidth,\n    isElementInViewport\n  } from './helpers';\n\n  import { inverse } from './constants';\n\n  /** @type {HTMLElement | null} */\n  export let targetElement = null;\n\n  /** @type {'hover' | 'click' | 'prop' | string} */\n  export let action = 'hover';\n\n  /** @type {string | {component: any, props?: Record<string, any>}} */\n  export let content = '';\n\n  /** @type {'left' | string} */\n  export let align = 'left';\n\n  /** @type {'top' | string} */\n  export let position = 'top';\n\n  /** @type {number} */\n  export let maxWidth = 200;\n\n  /** @type {Record<string, string> | null} */\n  export let style = null;\n\n  /** @type {string} */\n  export let theme = '';\n\n  /** @type {string} */\n  export let animation = '';\n\n  /** @type {number} */\n  export let delay = 200;\n\n  /** @type {boolean} */\n  export let arrow = true;\n\n  /** @type {boolean} */\n  export let autoPosition = false;\n\n  /** @type {boolean} */\n  export let show = false;\n\n  /** @type {HTMLDivElement | null} */\n  let tooltipRef = null;\n\n  /** @type {number} */\n  let minWidth = 0;\n\n  /** @type {any} */\n  let component = null;\n\n  /** @type {string | null} */\n  let animationEffect = null;\n\n  /** @type {boolean} */\n  let visible = false;\n\n  /** @type {any} */\n  let coords = {\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0\n  };\n\n  const animationDelay = animation ? delay : 0;\n\n  onMount(() => {\n    if (tooltipRef !== null) {\n      if (isComponent && !component) {\n        // @ts-ignore\n        component = new content.component({\n          target: tooltipRef,\n          // @ts-ignore\n          props: { action, ...content.props }\n        });\n      }\n\n      minWidth = getMinWidth(tooltipRef, maxWidth);\n\n      if (style && typeof style === 'object') {\n        for (let prop in style) {\n          const key = formatVariableKey(prop);\n          const value = style[prop];\n\n          tooltipRef.style.setProperty(`--tooltip-${key}`, value);\n        }\n      }\n    }\n\n    if (\n      autoPosition &&\n      // @ts-ignore\n      !isElementInViewport(tooltipRef, targetElement, position)\n    ) {\n      // @ts-ignore\n      position = inverse[position];\n    }\n\n    coords = computeTooltipPosition(\n      targetElement,\n      tooltipRef,\n      position,\n      coords\n    );\n\n    if (animation) {\n      animationEffect = animation;\n    }\n\n    setTimeout(() => (visible = true), animationDelay);\n  });\n\n  onDestroy(() => {\n    if (component) {\n      component.$destroy();\n      component = null;\n      visible = false;\n      show = false;\n    }\n  });\n\n  const onHandleResize = () => {\n    if (visible) {\n      coords = computeTooltipPosition(\n        targetElement,\n        tooltipRef,\n        position,\n        coords\n      );\n    }\n  };\n\n  $: isComponent = typeof content === 'object';\n  $: tooltipRef && show\n    ? setTimeout(() => (visible = true), 0)\n    : (visible = false);\n</script>\n\n{#if content}\n  <div\n    bind:this={tooltipRef}\n    class=\"tooltip animation-{animationEffect} {position} {theme}\"\n    class:show={visible}\n    class:arrowless={!arrow}\n    style=\"bottom: auto; right: auto; left: {coords.left}px; min-width: {minWidth}px; max-width: {maxWidth}px; text-align: {align}; top: {coords.top}px;\"\n  >\n    {#if !isComponent}\n      {@html content}\n    {/if}\n  </div>\n{/if}\n\n<svelte:window on:resize={onHandleResize} />\n\n<style>\n  /*--------------------------*\n   * Theme Variables\n   *--------------------------*/\n\n  :root {\n    --tooltip-arrow-size: 10px;\n    --tooltip-background-color: rgba(0, 0, 0, 0.9);\n    --tooltip-border-radius: 4px;\n    --tooltip-box-shadow: 0 1px 20px rgba(0, 0, 0, 0.25);\n    --tooltip-font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\n    --tooltip-font-size: 14px;\n    --tooltip-font-weight: 500;\n    --tooltip-line-height: 1.25rem;\n    --tooltip-color: #fff;\n    --tooltip-offset-x: 12px;\n    --tooltip-offset-y: 12px;\n    --tooltip-padding: 12px;\n    --tooltip-pointer-events: none;\n    --tooltip-white-space-hidden: nowrap;\n    --tooltip-white-space-shown: normal;\n    --tooltip-z-index: 100;\n  }\n\n  /*--------------------------*\n   * Tooltip Styling\n   *--------------------------*/\n\n  .tooltip {\n    background-color: var(--tooltip-background-color);\n    box-shadow: var(--tooltip-box-shadow);\n    border-radius: var(--tooltip-border-radius);\n    color: var(--tooltip-color);\n    opacity: 0;\n    font-family: var(--tooltip-font-family);\n    font-size: var(--tooltip-font-size);\n    font-style: normal;\n    font-weight: var(--tooltip-font-weight);\n    line-height: var(--tooltip-line-height);\n    padding: var(--tooltip-padding);\n    pointer-events: var(---tooltip-pointer-events);\n    position: absolute;\n    text-align: left;\n    visibility: hidden;\n    white-space: var(--tooltip-white-space-hidden);\n    z-index: var(--tooltip-z-index);\n  }\n\n  .tooltip.show {\n    opacity: 1;\n    visibility: visible;\n    white-space: var(--tooltip-white-space-shown);\n  }\n\n  .tooltip.bottom:after,\n  .tooltip.left:after,\n  .tooltip.right:after,\n  .tooltip.top:after {\n    border: var(--tooltip-arrow-size) solid var(--tooltip-background-color);\n    content: ' ';\n    position: absolute;\n  }\n\n  .tooltip.arrowless:after {\n    border: 0 !important;\n  }\n\n  .tooltip.bottom,\n  .tooltip.top {\n    --tooltip-offset-x: 0px;\n    --tooltip-offset-y: 12px;\n  }\n\n  .tooltip.left,\n  .tooltip.right {\n    --tooltip-offset-x: 12px;\n    --tooltip-offset-y: 0px;\n  }\n\n  .tooltip.bottom {\n    bottom: 0;\n    left: 50%;\n    transform: translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(100% + var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.bottom:after {\n    border-color: transparent transparent var(--tooltip-background-color);\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -99%);\n  }\n\n  .tooltip.top {\n    left: 50%;\n    top: 0;\n    transform: translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(-100% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.top:after {\n    border-color: var(--tooltip-background-color) transparent transparent\n      transparent;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 99%);\n  }\n\n  .tooltip.left {\n    left: 0;\n    top: 50%;\n    transform: translate(\n      calc(-100% - var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.left:after {\n    border-color: transparent transparent transparent\n      var(--tooltip-background-color);\n    right: 0;\n    top: 50%;\n    transform: translate(99%, -50%);\n  }\n\n  .tooltip.right {\n    right: 0;\n    top: 50%;\n    transform: translate(\n      calc(100% + var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.right:after {\n    border-color: transparent var(--tooltip-background-color) transparent\n      transparent;\n    left: 0;\n    top: 50%;\n    transform: translate(-99%, -50%);\n  }\n\n  /*--------------------------*\n   * CSS Animations\n   *--------------------------*/\n\n  /* Fade */\n\n  .tooltip.animation-fade {\n    opacity: 0;\n    transition: opacity 0.25s ease-in-out;\n  }\n\n  .tooltip.animation-fade.show {\n    opacity: 1;\n  }\n\n  /* Slide */\n\n  .tooltip.top.animation-slide {\n    margin-top: 10px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.top.animation-slide.show {\n    margin-top: 0;\n    opacity: 1;\n  }\n\n  .tooltip.bottom.animation-slide {\n    margin-bottom: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.bottom.animation-slide.show {\n    margin-bottom: 0;\n    opacity: 1;\n  }\n\n  .tooltip.right.animation-slide {\n    margin-right: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.right.animation-slide.show {\n    margin-right: 0;\n    opacity: 1;\n  }\n\n  .tooltip.left.animation-slide {\n    margin-left: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.left.animation-slide.show {\n    margin-left: 0;\n    opacity: 1;\n  }\n\n  /* Puff */\n\n  .tooltip.left.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.left.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.right.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.right.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.top.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.top.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.bottom.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.bottom.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  /* Bounce */\n\n  .tooltip.left.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.left.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.right.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.right.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.top.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.top.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.bottom.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.bottom.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n</style>\n",
    "<script>\n  // @ts-check\n  import { onMount, onDestroy } from 'svelte';\n\n  import {\n    computeTooltipPosition,\n    formatVariableKey,\n    getMinWidth,\n    isElementInViewport\n  } from './helpers';\n\n  import { inverse } from './constants';\n\n  /** @type {'hover' | 'click' | 'prop' | string} */\n  export let action = 'hover';\n\n  /** @type {string | {component: any, props?: Record<string, any>}} */\n  export let content = '';\n\n  /** @type {'left' | 'center' | 'right' | string} */\n  export let align = 'left';\n\n  /** @type {'top' | 'bottom' | 'left' | 'right' | string} */\n  export let position = 'top';\n\n  /** @type {number} */\n  export let maxWidth = 200;\n\n  /** @type {{ [x: string]: any; } | null} */\n  export let style = null;\n\n  /** @type {string} */\n  export let theme = '';\n\n  /** @type {string} */\n  export let animation = '';\n\n  /** @type {boolean} */\n  export let hideOnClickOutside = false;\n\n  /** @type {number} */\n  export let delay = 200;\n\n  /** @type {boolean} */\n  export let arrow = true;\n\n  /** @type {boolean} */\n  export let autoPosition = false;\n\n  /** @type {boolean} */\n  export let show = false;\n\n  /** @type {HTMLSpanElement | null} */\n  let containerRef = null;\n\n  /** @type {HTMLDivElement | null} */\n  let tooltipRef = null;\n\n  /** @type {number} */\n  let minWidth = 0;\n\n  /** @type {{ $destroy: () => void; } | null} */\n  let component = null;\n\n  /** @type {'top' | string} */\n  let initialPosition = position;\n\n  /** @type {string | null} */\n  let animationEffect = null;\n\n  /** @type {number | null} */\n  let timer = null;\n\n  /** @type {boolean} */\n  let visible = false;\n\n  /** @type {any} */\n  let coords = {\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0\n  };\n\n  // @ts-ignore\n  const detect = ({ target }) => {\n    if (\n      hideOnClickOutside &&\n      containerRef !== target &&\n      tooltipRef !== target &&\n      // @ts-ignore\n      !containerRef?.parentNode.contains(target) &&\n      !tooltipRef?.contains(target)\n    ) {\n      onHide();\n    }\n  };\n\n  const onClick = () => {\n    if (visible) {\n      onHide();\n    } else {\n      onShow();\n    }\n  };\n\n  const onShow = () => {\n    const animationDelay = animation ? delay : 0;\n\n    if (\n      autoPosition &&\n      // @ts-ignore\n      !isElementInViewport(containerRef, tooltipRef, position)\n    ) {\n      // @ts-ignore\n      position = inverse[position];\n    }\n\n    coords = computeTooltipPosition(containerRef, tooltipRef, position, coords);\n\n    if (animation) {\n      animationEffect = animation;\n    }\n\n    timer = setTimeout(() => (visible = true), animationDelay);\n  };\n\n  const onHide = () => {\n    visible = false;\n    position = initialPosition;\n    animationEffect = null;\n\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n\n  const addListeners = () => {\n    if (containerRef !== null) {\n      removeListeners();\n\n      if (action === 'click') {\n        containerRef.addEventListener('click', onClick);\n\n        if (hideOnClickOutside) {\n          document.addEventListener('click', detect, {\n            passive: true,\n            capture: true\n          });\n        }\n      }\n\n      if (action === 'hover') {\n        containerRef.addEventListener('mouseenter', onShow);\n        containerRef.addEventListener('mouseleave', onHide);\n      }\n    }\n  };\n\n  const removeListeners = () => {\n    if (hideOnClickOutside) {\n      document.removeEventListener('click', detect);\n    }\n\n    if (containerRef !== null) {\n      containerRef.removeEventListener('click', onClick);\n      containerRef.removeEventListener('mouseenter', onShow);\n      containerRef.removeEventListener('mouseleave', onHide);\n    }\n  };\n\n  onMount(() => {\n    addListeners();\n\n    // @ts-ignore\n    computeTooltipPosition();\n\n    if (tooltipRef !== null) {\n      if (isComponent && !component) {\n        // @ts-ignore\n        component = new content.component({\n          target: tooltipRef,\n          // @ts-ignore\n          props: content.props\n        });\n      }\n\n      minWidth = getMinWidth(tooltipRef, maxWidth);\n\n      if (style && typeof style === 'object') {\n        for (let prop in style) {\n          const key = formatVariableKey(prop);\n          const value = style[prop];\n\n          tooltipRef.style.setProperty(`--tooltip-${key}`, value);\n        }\n      }\n    }\n  });\n\n  onDestroy(() => {\n    if (component) {\n      component.$destroy();\n      component = null;\n    }\n\n    removeListeners();\n  });\n\n  const onHandleResize = () => {\n    if (visible) {\n      coords = computeTooltipPosition(\n        containerRef,\n        tooltipRef,\n        position,\n        coords\n      );\n    }\n  };\n\n  $: isComponent = typeof content === 'object';\n  $: action, addListeners();\n  $: tooltipRef && show ? setTimeout(onShow, 0) : setTimeout(onHide, 0);\n</script>\n\n{#if content}\n  <span bind:this={containerRef} class=\"tooltip-container\">\n    <slot />\n  </span>\n  <div\n    bind:this={tooltipRef}\n    class=\"tooltip animation-{animationEffect} {position} {theme}\"\n    class:arrowless={!arrow}\n    class:show={visible}\n    style=\"bottom: auto; right: auto; left: {coords.left}px; min-width: {minWidth}px; max-width: {maxWidth}px; text-align: {align}; top: {coords.top}px;\"\n  >\n    {#if !isComponent}\n      {@html content}\n    {/if}\n  </div>\n{:else}\n  <slot />\n{/if}\n\n<svelte:window on:resize={onHandleResize} />\n\n<style>\n  /*--------------------------*\n   * Theme Variables\n   *--------------------------*/\n\n  :root {\n    --tooltip-arrow-size: 10px;\n    --tooltip-background-color: rgba(0, 0, 0, 0.9);\n    --tooltip-border-radius: 4px;\n    --tooltip-box-shadow: 0 1px 20px rgba(0, 0, 0, 0.25);\n    --tooltip-font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\n    --tooltip-font-size: 14px;\n    --tooltip-font-weight: 500;\n    --tooltip-line-height: 1.25rem;\n    --tooltip-color: #fff;\n    --tooltip-offset-x: 0px;\n    --tooltip-offset-y: 0px;\n    --tooltip-padding: 12px;\n    --tooltip-pointer-events: none;\n    --tooltip-white-space-hidden: nowrap;\n    --tooltip-white-space-shown: normal;\n    --tooltip-z-index: 100;\n  }\n\n  /*--------------------------*\n   * Tooltip Styling\n   *--------------------------*/\n\n  .tooltip {\n    background-color: var(--tooltip-background-color);\n    box-shadow: var(--tooltip-box-shadow);\n    border-radius: var(--tooltip-border-radius);\n    color: var(--tooltip-color);\n    opacity: 0;\n    font-family: var(--tooltip-font-family);\n    font-size: var(--tooltip-font-size);\n    font-style: normal;\n    font-weight: var(--tooltip-font-weight);\n    line-height: var(--tooltip-line-height);\n    padding: var(--tooltip-padding);\n    pointer-events: var(--tooltip-pointer-events);\n    position: absolute;\n    text-align: left;\n    visibility: hidden;\n    white-space: var(--tooltip-white-space-hidden);\n    z-index: var(--tooltip-z-index);\n  }\n\n  .tooltip.show {\n    opacity: 1;\n    visibility: visible;\n    white-space: var(--tooltip-white-space-shown);\n  }\n\n  .tooltip.bottom:after,\n  .tooltip.left:after,\n  .tooltip.right:after,\n  .tooltip.top:after {\n    border: var(--tooltip-arrow-size) solid var(--tooltip-background-color);\n    content: ' ';\n    position: absolute;\n  }\n\n  .tooltip.arrowless:after {\n    border: 0 !important;\n  }\n\n  .tooltip.bottom,\n  .tooltip.top {\n    --tooltip-offset-x: 0px;\n    --tooltip-offset-y: 12px;\n  }\n\n  .tooltip.left,\n  .tooltip.right {\n    --tooltip-offset-x: 12px;\n    --tooltip-offset-y: 0px;\n  }\n\n  .tooltip.bottom {\n    bottom: 0;\n    left: 50%;\n    transform: translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(100% + var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.bottom:after {\n    border-color: transparent transparent var(--tooltip-background-color);\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -99%);\n  }\n\n  .tooltip.top {\n    left: 50%;\n    top: 0;\n    transform: translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(-100% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.top:after {\n    border-color: var(--tooltip-background-color) transparent transparent\n      transparent;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 99%);\n  }\n\n  .tooltip.left {\n    left: 0;\n    top: 50%;\n    transform: translate(\n      calc(-100% - var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.left:after {\n    border-color: transparent transparent transparent\n      var(--tooltip-background-color);\n    right: 0;\n    top: 50%;\n    transform: translate(99%, -50%);\n  }\n\n  .tooltip.right {\n    right: 0;\n    top: 50%;\n    transform: translate(\n      calc(100% + var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    );\n  }\n\n  .tooltip.right:after {\n    border-color: transparent var(--tooltip-background-color) transparent\n      transparent;\n    left: 0;\n    top: 50%;\n    transform: translate(-99%, -50%);\n  }\n\n  /*--------------------------*\n   * CSS Animations\n   *--------------------------*/\n\n  /* Fade */\n\n  .tooltip.animation-fade {\n    opacity: 0;\n    transition: opacity 0.25s ease-in-out;\n  }\n\n  .tooltip.animation-fade.show {\n    opacity: 1;\n  }\n\n  /* Slide */\n\n  .tooltip.top.animation-slide {\n    margin-top: 10px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.top.animation-slide.show {\n    margin-top: 0;\n    opacity: 1;\n  }\n\n  .tooltip.bottom.animation-slide {\n    margin-bottom: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.bottom.animation-slide.show {\n    margin-bottom: 0;\n    opacity: 1;\n  }\n\n  .tooltip.right.animation-slide {\n    margin-right: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.right.animation-slide.show {\n    margin-right: 0;\n    opacity: 1;\n  }\n\n  .tooltip.left.animation-slide {\n    margin-left: 20px;\n    opacity: 0;\n    transition:\n      opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out;\n  }\n\n  .tooltip.left.animation-slide.show {\n    margin-left: 0;\n    opacity: 1;\n  }\n\n  /* Puff */\n\n  .tooltip.left.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.left.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.right.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.right.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.top.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.top.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.bottom.animation-puff {\n    filter: blur(2px);\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(2, 2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out;\n  }\n\n  .tooltip.bottom.animation-puff.show {\n    filter: blur(0);\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  /* Bounce */\n\n  .tooltip.left.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.left.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.right.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.right.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.top.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.top.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n\n  .tooltip.bottom.animation-bounce {\n    opacity: 0;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);\n    transform-origin: 50% 50%;\n    transition:\n      opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3);\n  }\n\n  .tooltip.bottom.animation-bounce.show {\n    opacity: 1;\n    transform: translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1);\n  }\n</style>\n",
    "<!--\n\t@component\n\tLayer Cake component\n -->\n<script>\n\timport { setContext, onMount } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport debounce from './utils/debounce.js';\n\n\timport calcScaleExtents from './helpers/calcScaleExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport printDebug from './helpers/printDebug.js';\n\n\timport defaultScales from './settings/defaultScales.js';\n\n\tconst printDebug_debounced = debounce(printDebug, 200);\n\n\t/** @type {Boolean} [ssr=false] Whether this chart should be rendered server side. */\n\texport let ssr = false;\n\t/** @type {Boolean} [pointerEvents=true] Whether to allow pointer events via CSS. Set this to `false` to set `pointer-events: none;` on all components, disabling all mouse interaction. */\n\texport let pointerEvents = true;\n\t/** @type {String} [position='relative'] Determine the positioning of the wrapper div. Set this to `'absolute'` when you want to stack cakes. */\n\texport let position = 'relative';\n\t/** @type {Boolean} [percentRange=false] If `true`, set all scale ranges to `[0, 100]`. Ranges reversed via `xReverse`, `yReverse`, `zReverse` or `rReverse` props will continue to be reversed as usual. */\n\texport let percentRange = false;\n\n\t/** @type {Number} [width=containerWidth] Override the automated width. */\n\texport let width = undefined;\n\t/** @type {Number} [height=containerHeight] Override the automated height. */\n\texport let height = undefined;\n\n\t/** @type {Number} [containerWidth=100] The bound container width. */\n\texport let containerWidth = width || 100;\n\t/** @type {Number} [containerHeight=100] The bound container height. */\n\texport let containerHeight = height || 100;\n\n\t/**\t@type {Element} [element] The .layercake-container `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\n\t/** @type {String|Function|Number|Array} x The x accessor. The key in each row of data that corresponds to the x-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let x = undefined;\n\t/** @type {String|Function|Number|Array} y The y accessor. The key in each row of data that corresponds to the y-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let y = undefined;\n\t/** @type {String|Function|Number|Array} z The z accessor. The key in each row of data that corresponds to the z-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let z = undefined;\n\t/** @type {String|Function|Number|Array} r The r accessor. The key in each row of data that corresponds to the r-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let r = undefined;\n\n\t/** @type {Array|Object} [data=[]] If `data` is not a flat array of objects and you want to use any of the scales, set a flat version of the data via the `flatData` prop. */\n\texport let data = [];\n\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [xDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let xDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [yDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`.  Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let yDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [zDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let zDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [rDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let rDomain = undefined;\n\t/** @type {Boolean|Number} [xNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the x domain. */\n\texport let xNice = false;\n\t/** @type {Boolean|Number} [yNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the y domain. */\n\texport let yNice = false;\n\t/** @type {Boolean|Number} [zNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the z domain. */\n\texport let zNice = false;\n\t/** @type {Boolean} [rNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the r domain. */\n\texport let rNice = false;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [xPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let xPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [yPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let yPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [zPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let zPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [rPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let rPadding = undefined;\n\t/** @type {Function} [xScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let xScale = defaultScales.x;\n\t/** @type {Function} [yScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let yScale = defaultScales.y;\n\t/** @type {Function} [zScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let zScale = defaultScales.z;\n\t/** @type {Function} [rScale=d3.scaleSqrt] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let rScale = defaultScales.r;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default x range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `xReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let xRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default y range of `[0, height]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `yReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let yRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [zRange] Override the default z range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `zReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let zRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [rRange] Override the default r range of `[1, 25]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `rReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let rRange = undefined;\n\t/** @type {Boolean} [xReverse=false] Reverse the default x range. By default this is `false` and the range is `[0, width]`. Ignored if you set the xRange prop. */\n\texport let xReverse = false;\n\t/** @type {Boolean} [yReverse=true] Reverse the default y range. By default this is `true` and the range is `[height, 0]` unless using an ordinal scale with a `.bandwidth` method for `yScale`. Ignored if you set the `yRange` prop. */\n\texport let yReverse = undefined\n\t/** @type {Boolean} [zReverse=false] Reverse the default z range. By default this is `false` and the range is `[0, width]`. Ignored if you set the zRange prop. */\n\texport let zReverse = false;\n\t/** @type {Boolean} [rReverse=false] Reverse the default r range. By default this is `false` and the range is `[1, 25]`. Ignored if you set the rRange prop. */\n\texport let rReverse = false;\n\t/** @type {{top?: Number, right?: Number, bottom?: Number, left?: Number}} [padding={}] The amount of padding to put around your chart. It operates like CSS box-sizing: border-box; where values are subtracted from the parent container's width and height, the same as a [D3 margin convention](https://bl.ocks.org/mbostock/3019563). */\n\texport let padding = {};\n\t/** @type {{ x?: [min: Number, max: Number], y?: [min: Number, max: Number], r?: [min: Number, max: Number], z?: [min: Number, max: Number] }} [extents] Manually set the extents of the x, y or r scale as a two-dimensional array of the min and max you want. Setting values here will skip any dynamic extent calculation of the data for that dimension. */\n\texport let extents = {};\n\n\t/** @type {Array} [flatData=data] A flat version of data. */\n\texport let flatData = undefined;\n\n\t/** @type {Object} custom Any extra configuration values you want available on the LayerCake context. This could be useful for color lookups or additional constants. */\n\texport let custom = {};\n\n\t/** @type {Boolean} debug Enable debug printing to the console. Useful to inspect your scales and dimensions. */\n\texport let debug = false;\n\n\t/**\n\t * Make this reactive\n\t */\n\t$: yReverseValue = typeof yReverse === 'undefined'\n\t\t? typeof yScale.bandwidth === 'function' ? false : true\n\t\t: yReverse;\n\n\t/* --------------------------------------------\n\t * Keep track of whether the component has mounted\n\t * This is used to emit warnings once we have measured\n\t * the container object and it doesn't have proper dimensions\n\t */\n\tlet isMounted = false;\n\tonMount(() => {\n\t\tisMounted = true;\n\t});\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable(percentRange);\n\tconst _containerWidth = writable(containerWidth);\n\tconst _containerHeight = writable(containerHeight);\n\tconst _extents = writable(filterObject(extents));\n\tconst _data = writable(data);\n\tconst _flatData = writable(flatData || data);\n\tconst _padding = writable(padding);\n\tconst _x = writable(makeAccessor(x));\n\tconst _y = writable(makeAccessor(y));\n\tconst _z = writable(makeAccessor(z));\n\tconst _r = writable(makeAccessor(r));\n\tconst _xDomain = writable(xDomain);\n\tconst _yDomain = writable(yDomain);\n\tconst _zDomain = writable(zDomain);\n\tconst _rDomain = writable(rDomain);\n\tconst _xNice = writable(xNice);\n\tconst _yNice = writable(yNice);\n\tconst _zNice = writable(zNice);\n\tconst _rNice = writable(rNice);\n\tconst _xReverse = writable(xReverse);\n\tconst _yReverse = writable(yReverseValue);\n\tconst _zReverse = writable(zReverse);\n\tconst _rReverse = writable(rReverse);\n\tconst _xPadding = writable(xPadding);\n\tconst _yPadding = writable(yPadding);\n\tconst _zPadding = writable(zPadding);\n\tconst _rPadding = writable(rPadding);\n\tconst _xRange = writable(xRange);\n\tconst _yRange = writable(yRange);\n\tconst _zRange = writable(zRange);\n\tconst _rRange = writable(rRange);\n\tconst _xScale = writable(xScale);\n\tconst _yScale = writable(yScale);\n\tconst _zScale = writable(zScale);\n\tconst _rScale = writable(rScale);\n\tconst _config = writable(config);\n\tconst _custom = writable(custom);\n\n\t$: $_percentRange = percentRange;\n\t$: $_containerWidth = containerWidth;\n\t$: $_containerHeight = containerHeight;\n\t$: $_extents = filterObject(extents);\n\t$: $_data = data;\n\t$: $_flatData = flatData || data;\n\t$: $_padding = padding;\n\t$: $_x = makeAccessor(x);\n\t$: $_y = makeAccessor(y);\n\t$: $_z = makeAccessor(z);\n\t$: $_r = makeAccessor(r);\n\t$: $_xDomain = xDomain;\n\t$: $_yDomain = yDomain;\n\t$: $_zDomain = zDomain;\n\t$: $_rDomain = rDomain;\n\t$: $_xNice = xNice;\n\t$: $_yNice = yNice;\n\t$: $_zNice = zNice;\n\t$: $_rNice = rNice;\n\t$: $_xReverse = xReverse;\n\t$: $_yReverse = yReverseValue;\n\t$: $_zReverse = zReverse;\n\t$: $_rReverse = rReverse;\n\t$: $_xPadding = xPadding;\n\t$: $_yPadding = yPadding;\n\t$: $_zPadding = zPadding;\n\t$: $_rPadding = rPadding;\n\t$: $_xRange = xRange;\n\t$: $_yRange = yRange;\n\t$: $_zRange = zRange;\n\t$: $_rRange = rRange;\n\t$: $_xScale = xScale;\n\t$: $_yScale = yScale;\n\t$: $_zScale = zScale;\n\t$: $_rScale = rScale;\n\t$: $_custom = custom;\n\t$: $_config = config;\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\tconst obj = {};\n\t\tif ($x) {\n\t\t\tobj.x = $x;\n\t\t}\n\t\tif ($y) {\n\t\t\tobj.y = $y;\n\t\t}\n\t\tif ($z) {\n\t\t\tobj.z = $z;\n\t\t}\n\t\tif ($r) {\n\t\t\tobj.r = $r;\n\t\t}\n\t\treturn obj;\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived(\n\t\t[_containerWidth, _containerHeight, padding_d],\n\t\t([$containerWidth, $containerHeight, $padding]) => {\n\t\t\tconst b = {};\n\t\t\tb.top = $padding.top;\n\t\t\tb.right = $containerWidth - $padding.right;\n\t\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\t\tb.left = $padding.left;\n\t\t\tb.width = b.right - b.left;\n\t\t\tb.height = b.bottom - b.top;\n\t\t\tif (b.width <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (b.height <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t);\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t * Note that this is different from an \"extent\" passed\n\t * in as a domain, which can be a partial domain\n\t */\n\tconst extents_d = derived(\n\t\t[_flatData, activeGetters_d, _extents, _xScale, _yScale, _rScale, _zScale],\n\t\t([$flatData, $activeGetters, $extents, $_xScale, $_yScale, $_rScale, $_zScale]) => {\n\t\t\tconst scaleLookup = { x: $_xScale, y: $_yScale, r: $_rScale, z: $_zScale };\n\t\t\tconst getters = filterObject($activeGetters, $extents);\n\t\t\tconst activeScales = Object.fromEntries(Object.keys(getters).map((k) => [k, scaleLookup[k]]));\n\n\t\t\tif (Object.keys(getters).length > 0) {\n\t\t\t\tconst calculatedExtents = calcScaleExtents($flatData, getters, activeScales);\n\t\t\t\treturn { ...calculatedExtents, ...$extents };\n\t\t\t} else {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t);\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived(\n\t\t[\n\t\t\t_xScale,\n\t\t\textents_d,\n\t\t\txDomain_d,\n\t\t\t_xPadding,\n\t\t\t_xNice,\n\t\t\t_xReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_xRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('x')\n\t);\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived(\n\t\t[\n\t\t\t_yScale,\n\t\t\textents_d,\n\t\t\tyDomain_d,\n\t\t\t_yPadding,\n\t\t\t_yNice,\n\t\t\t_yReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_yRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('y')\n\t);\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived(\n\t\t[\n\t\t\t_zScale,\n\t\t\textents_d,\n\t\t\tzDomain_d,\n\t\t\t_zPadding,\n\t\t\t_zNice,\n\t\t\t_zReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_zRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('z')\n\t);\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived(\n\t\t[\n\t\t\t_rScale,\n\t\t\textents_d,\n\t\t\trDomain_d,\n\t\t\t_rPadding,\n\t\t\t_rNice,\n\t\t\t_rReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_rRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('r')\n\t);\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n\n\t$: if ($box_d && debug === true && (ssr === true || typeof window !== 'undefined')) {\n\t\t// Call this as a debounce so that it doesn't get called multiple times as these vars get filled in\n\t\tprintDebug_debounced({\n\t\t\tboundingBox: $box_d,\n\t\t\tactiveGetters: $activeGetters_d,\n\t\t\tx: config.x,\n\t\t\ty: config.y,\n\t\t\tz: config.z,\n\t\t\tr: config.r,\n\t\t\txScale: $xScale_d,\n\t\t\tyScale: $yScale_d,\n\t\t\tzScale: $zScale_d,\n\t\t\trScale: $rScale_d,\n\t\t});\n\t}\n</script>\n\n{#if ssr === true || typeof window !== 'undefined'}\n\t<div\n\t\tbind:this={element}\n\t\tclass=\"layercake-container\"\n\t\tstyle:position\n\t\tstyle:top={position === 'absolute' ? '0' : null}\n\t\tstyle:right={position === 'absolute' ? '0' : null}\n\t\tstyle:bottom={position === 'absolute' ? '0' : null}\n\t\tstyle:left={position === 'absolute' ? '0' : null}\n\t\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\t{element}\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t\tactiveGetters={$activeGetters_d}\n\t\t\tpercentRange={$_percentRange}\n\t\t\tx={$_x}\n\t\t\ty={$_y}\n\t\t\tz={$_z}\n\t\t\tr={$_r}\n\t\t\tcustom={$_custom}\n\t\t\tdata={$_data}\n\t\t\txNice={$_xNice}\n\t\t\tyNice={$_yNice}\n\t\t\tzNice={$_zNice}\n\t\t\trNice={$_rNice}\n\t\t\txReverse={$_xReverse}\n\t\t\tyReverse={$_yReverse}\n\t\t\tzReverse={$_zReverse}\n\t\t\trReverse={$_rReverse}\n\t\t\txPadding={$_xPadding}\n\t\t\tyPadding={$_yPadding}\n\t\t\tzPadding={$_zPadding}\n\t\t\trPadding={$_rPadding}\n\t\t\tpadding={$padding_d}\n\t\t\tflatData={$_flatData}\n\t\t\textents={$extents_d}\n\t\t\txDomain={$xDomain_d}\n\t\t\tyDomain={$yDomain_d}\n\t\t\tzDomain={$zDomain_d}\n\t\t\trDomain={$rDomain_d}\n\t\t\txRange={$xRange_d}\n\t\t\tyRange={$yRange_d}\n\t\t\tzRange={$zRange_d}\n\t\t\trRange={$rRange_d}\n\t\t\tconfig={$_config}\n\t\t\txScale={$xScale_d}\n\t\t\txGet={$xGet_d}\n\t\t\tyScale={$yScale_d}\n\t\t\tyGet={$yGet_d}\n\t\t\tzScale={$zScale_d}\n\t\t\tzGet={$zGet_d}\n\t\t\trScale={$rScale_d}\n\t\t\trGet={$rGet_d}\n\t\t/>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tHTML layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's outermost `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [role] A string passed to the `aria-role` on the `<div>` tag. This is `undefined` by default but will be set by default to `'figure'` if `label`, `labelledby` or `describedby` is set. That default will be overridden by whatever is passed in. */\n\texport let role = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<div>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<div>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<div>` tag. */\n\texport let describedBy = undefined;\n\n\t$: roleVal = role || (label || labelledBy || describedBy ? 'figure' : undefined);\n</script>\n\n<div\n\tbind:this={element}\n\tclass=\"layercake-layout-html\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:right={$padding.right + 'px'}\n\tstyle:bottom={$padding.bottom + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\trole={roleVal}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot {element}></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tScaled SVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {Number} [fixedAspectRatio=1`] A number to set the aspect ratio onto the viewBox. */\n\texport let fixedAspectRatio = 1;\n\n\t/** @type {String} [viewBox=`0 0 100 ${100 / fixedAspectRatio}`] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\t$: viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n</script>\n\n<svg\n\tbind:this={element}\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\tstyle:width={`calc(100% - ${($padding.left + $padding.right)}px)`}\n\tstyle:height={`calc(100% - ${($padding.top + $padding.bottom)}px)`}\n\tstyle=\"right:0px; bottom:0px;\"\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot {element}></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tSVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Element} [innerElement] The layer's `<g>` tag. Useful for bindings. */\n\texport let innerElement = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [viewBox] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` property on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby property` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to the `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n\n<svg\n\tbind:this={element}\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g\n\t\tbind:this={innerElement}\n\t\tclass=\"layercake-layout-svg_g\"\n\t\ttransform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot {element}></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\t// CORE IMPORTS\n\timport { setContext, onMount } from \"svelte\";\n\timport { tooltip } from \"@svelte-plugins/tooltips\";\n\timport { getMotion } from \"./utils.js\";\n\timport { themes } from \"./config.js\";\n\timport ONSHeader from \"./layout/ONSHeader.svelte\";\n\timport ONSFooter from \"./layout/ONSFooter.svelte\";\n\timport Header from \"./layout/Header.svelte\";\n\timport Section from \"./layout/Section.svelte\";\n\timport Media from \"./layout/Media.svelte\";\n\timport Scroller from \"./layout/Scroller.svelte\";\n\timport Filler from \"./layout/Filler.svelte\";\n\timport Divider from \"./layout/Divider.svelte\";\n\timport Toggle from \"./ui/Toggle.svelte\";\n\timport Arrow from \"./ui/Arrow.svelte\";\n\timport Em from \"./ui/Em.svelte\";\n\n\timport Treemap from \"./plot/treemap.svelte\";\n\timport treemap_data from \"./plot/treemap.json\";\n\timport Apexcharts from \"./plot/creer_apexchart.svelte\";\n\timport sau from \"./plot/sau.json\";\n\timport nb_exploit from \"./plot/nb_exploitation.json\";\n\timport otex_sau from \"./plot/otex_sau.json\";\n\timport Bubblechart from \"./plot/bubblechart.svelte\";\n\timport bubble_data_init from \"./plot/bubble_data.json\";\n\timport bubble_data_froment from \"./plot/bubble_data_froment.json\";\n\timport bubble_data_avoine from \"./plot/bubble_data_avoine.json\";\n\timport bubble_data_mais from \"./plot/bubble_data_maïs.json\";\n\timport bubble_data_orge_meteil from \"./plot/bubble_data_orge_meteil.json\";\n\timport bubble_data_seigle from \"./plot/bubble_data_seigle.json\";\n\timport bubble_data_sarrasin from \"./plot/bubble_data_sarrasin.json\";\n\tfunction getRightWord(id) {\n\t\tif (typeof id !== \"string\") {\n\t\t\treturn \"\"; // ou retournez une valeur par défaut appropriée\n\t\t}\n\n\t\tconst words = id.split(\".\");\n\t\treturn words[1]; // Le mot de droite\n\t}\n\tconst bubble_data_init_barchart = bubble_data_init.map((item) => ({\n\t\t...item,\n\t\tid: getRightWord(item.id),\n\t}));\n\n\t// DEMO-SPECIFIC IMPORTS\n\n\timport bbox from \"@turf/bbox\";\n\timport {\n\t\tgetData,\n\t\tsetColors,\n\t\tgetTopo,\n\t\tgetBreaks,\n\t\tgetColor,\n\t} from \"./utils.js\";\n\timport { colors, units } from \"./config.js\";\n\timport {\n\t\tScatterChart,\n\t\tLineChart,\n\t\tBarChart,\n\t} from \"@onsvisual/svelte-charts\";\n\timport {\n\t\tMap,\n\t\tMapSource,\n\t\tMapLayer,\n\t\tMapTooltip,\n\t} from \"@onsvisual/svelte-maps\";\n\n\t// CORE CONFIG (COLOUR THEMES)\n\t// Set theme globally (options are 'light', 'dark' or 'lightblue')\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// CONFIG FOR SCROLLER COMPONENTS\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet animation = getMotion(); // Set animation preference depending on browser preference\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\tonMount(() => {\n\t\tidPrev = { ...id };\n\t});\n\n\t// DEMO-SPECIFIC CONFIG\n\t// Constants\n\tconst datasets = [\"region\", \"departement\"];\n\t//const topojson = \"./data/geo_lad2021.json\";\n\t//const topojsonFR = \"./data/dep2021.json\";\n\timport topojsonFR from \"./plot/dep2021.json\";\n\n\tconst mapstyle =\n\t\t\"https://bothness.github.io/ons-basemaps/data/style-omt.json\";\n\tconst mapbounds = {\n\t\tuk: [\n\t\t\t[-9, 49],\n\t\t\t[2, 61],\n\t\t],\n\t\tfr: [\n\t\t\t[-5.1, 51.1],\n\t\t\t[9.6, 41.3],\n\t\t],\n\t};\n\n\t// Data\n\tlet data = { departement: {}, region: {} };\n\tlet metadata = { departement: {}, region: {} };\n\t//let geojson;\n\t//let geojsonFR;\n\n\t// Element bindings\n\tlet map = null; // Bound to mapbox 'map' instance once initialised\n\n\t// State\n\tlet hovered; // Hovered departement (chart or map)\n\tlet selected; // Selected departement (chart or map)\n\t$: region =\n\t\tselected && metadata.departement.lookup\n\t\t\t? metadata.departement.lookup[selected].parent\n\t\t\t: null; // Gets region code for 'selected'\n\tlet mapHighlighted = []; // Highlighted departement (map only)\n\tlet graph_select = bubble_data_sarrasin; // rKey (radius) for scatter chart\n\tlet mapKey = \"nb_exp\"; // Key for data to be displayed on map\n\tlet explore = false; // Allows chart/map interactivity to be toggled on/off\n\n\t// scroller 1\n\tlet type_graph = \"bar\";\n\tlet data_chart = nb_exploit;\n\tlet title_graph = \"Nombre d'exploitations par classe de SAU\";\n\tlet name_series = [\"2020\", \"2010\"];\n\tlet ykey = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\tlet xkey = \"taille\";\n\tlet unit = \"\";\n\tlet nb_decimal = 0;\n\tlet colors_chart = [\"#5f86af\", \"#999999\"];\n\tlet animate = true;\n\tlet horizontal = true;\n\tlet distributed = false;\n\n\t// scroller 2\n\tlet type_graph2 = \"bar\";\n\tlet data_chart2 = nb_exploit;\n\tlet title_graph2 = \"Nombre d'exploitations par classe de SAU\";\n\tlet name_series2 = [\"2020\", \"2010\"];\n\tlet ykey2 = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\tlet xkey2 = \"taille\";\n\tlet unit2 = \"\";\n\tlet nb_decimal2 = 0;\n\tlet colors_chart2 = [\"#5f86af\", \"#999999\"];\n\tlet animate2 = true;\n\tlet horizontal2 = true;\n\tlet distributed2 = false;\n\t// FUNCTIONS (INCL. SCROLLER ACTIONS)\n\n\t// Functions for chart and map on:select and on:hover events\n\tfunction doSelect(e) {\n\t\tconsole.log(e);\n\t\tselected = e.detail.id;\n\t\tif (e.detail.feature) fitById(selected); // Fit map if select event comes from map\n\t}\n\tfunction doHover(e) {\n\t\thovered = e.detail.id;\n\t}\n\n\t// Functions for map component\n\tfunction fitBounds(bounds) {\n\t\tif (map) {\n\t\t\tmap.fitBounds(bounds, { animate: animation, padding: 30 });\n\t\t}\n\t}\n\tfunction fitById(id) {\n\t\tif (geojsonFR && id) {\n\t\t\tlet feature = geojsonFR.features.find(\n\t\t\t\t(d) => d.properties.code == id,\n\t\t\t);\n\t\t\tlet bounds = bbox(feature.geometry);\n\t\t\tfitBounds(bounds);\n\t\t}\n\t}\n\n\t// Actions for Scroller components\n\tconst actions = {\n\t\tmap: {\n\t\t\t// Actions for <Scroller/> with id=\"map\"\n\t\t\tmap01: () => {\n\t\t\t\t// Action for <section/> with data-id=\"map01\"\n\t\t\t\t//fitBounds(mapbounds.uk);\n\t\t\t\tfitBounds(mapbounds.fr);\n\t\t\t\tmapKey = \"nb_exp\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap02: () => {\n\t\t\t\t//fitBounds(mapbounds.uk);\n\t\t\t\tfitBounds(mapbounds.fr);\n\t\t\t\tmapKey = \"surf_2022\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap03: () => {\n\t\t\t\tlet hl = [...data.departement.indicators].sort(\n\t\t\t\t\t(a, b) => b.surf_2022 - a.surf_2022,\n\t\t\t\t)[0];\n\t\t\t\tfitById(hl.code);\n\t\t\t\tmapKey = \"surf_2022\";\n\t\t\t\tmapHighlighted = [hl.code];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap04: () => {\n\t\t\t\t//fitBounds(mapbounds.uk);\n\t\t\t\tfitBounds(mapbounds.fr);\n\t\t\t\tmapKey = \"surf_2022\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = true;\n\t\t\t},\n\t\t},\n\t\tchart: {\n\t\t\tchart00: () => {\n\t\t\t\ttype_graph = \"bar\";\n\t\t\t\tdata_chart = nb_exploit;\n\t\t\t\ttitle_graph = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series = [\"2020\", \"2010\"];\n\t\t\t\tykey = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey = \"taille\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\"#5f86af\", \"#999999\"];\n\t\t\t\thorizontal = true;\n\t\t\t\tdistributed = false;\n\t\t\t},\n\t\t\tchart01: () => {\n\t\t\t\ttype_graph = \"bar\";\n\t\t\t\tdata_chart = nb_exploit;\n\t\t\t\ttitle_graph = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series = [\"2020\", \"2010\"];\n\t\t\t\tykey = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey = \"taille\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\n\t\t\t\t\t\"#34cb6a\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t];\n\t\t\t\thorizontal = true;\n\t\t\t\tdistributed = true;\n\t\t\t},\n\t\t\tchart02: () => {\n\t\t\t\ttype_graph = \"area\";\n\t\t\t\tdata_chart = sau;\n\t\t\t\ttitle_graph =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series = [\"< 20 ha\", \"total\"];\n\t\t\t\tykey = [\"nbexpl_moins_20_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey = \"annee\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal = false;\n\t\t\t\tdistributed = true;\n\t\t\t},\n\t\t\tchart03: () => {\n\t\t\t\ttype_graph = \"bar\";\n\t\t\t\tdata_chart = nb_exploit;\n\t\t\t\ttitle_graph = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series = [\"2020\", \"2010\"];\n\t\t\t\tykey = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey = \"taille\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#34cb6a\",\n\t\t\t\t];\n\t\t\t\thorizontal = true;\n\t\t\t\tdistributed = true;\n\t\t\t},\n\t\t\tchart04: () => {\n\t\t\t\ttype_graph = \"area\";\n\t\t\t\tdata_chart = sau;\n\t\t\t\ttitle_graph =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series = [\">= 100 ha\", \"total\"];\n\t\t\t\tykey = [\"nbexpl_sup_100_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey = \"annee\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal = false;\n\t\t\t\tdistributed = true;\n\t\t\t},\n\t\t\tchart05: () => {\n\t\t\t\ttype_graph = \"area\";\n\t\t\t\tdata_chart = sau;\n\t\t\t\ttitle_graph =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series = [\">= 100 ha\", \"total\"];\n\t\t\t\tykey = [\"nbexpl_sup_100_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey = \"annee\";\n\t\t\t\tunit = \"\";\n\t\t\t\tnb_decimal = 0;\n\t\t\t\tcolors_chart = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal = false;\n\t\t\t\tdistributed = true;\n\t\t\t\tanimate = false;\n\t\t\t},\n\t\t},\n\t\tchart2: {\n\t\t\tchart200: () => {\n\t\t\t\ttype_graph2 = \"bar\";\n\t\t\t\tdata_chart2 = nb_exploit;\n\t\t\t\ttitle_graph2 = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series2 = [\"2020\", \"2010\"];\n\t\t\t\tykey2 = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey2 = \"taille\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\"#5f86af\", \"#999999\"];\n\t\t\t\thorizontal2 = true;\n\t\t\t\tdistributed2 = false;\n\t\t\t},\n\t\t\tchart201: () => {\n\t\t\t\ttype_graph2 = \"bar\";\n\t\t\t\tdata_chart2 = nb_exploit;\n\t\t\t\ttitle_graph2 = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series2 = [\"2020\", \"2010\"];\n\t\t\t\tykey2 = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey2 = \"taille\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\n\t\t\t\t\t\"#34cb6a\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t];\n\t\t\t\thorizontal2 = true;\n\t\t\t\tdistributed2 = true;\n\t\t\t},\n\t\t\tchart202: () => {\n\t\t\t\ttype_graph2 = \"area\";\n\t\t\t\tdata_chart2 = sau;\n\t\t\t\ttitle_graph2 =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series2 = [\"< 20 ha\", \"total\"];\n\t\t\t\tykey2 = [\"nbexpl_moins_20_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey2 = \"annee\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal2 = false;\n\t\t\t\tdistributed2 = true;\n\t\t\t},\n\t\t\tchart203: () => {\n\t\t\t\ttype_graph2 = \"bar\";\n\t\t\t\tdata_chart2 = nb_exploit;\n\t\t\t\ttitle_graph2 = \"Nombre d'exploitations par classe de SAU\";\n\t\t\t\tname_series2 = [\"2020\", \"2010\"];\n\t\t\t\tykey2 = [\"nb_exploit_2020\", \"nb_exploit_2010\"];\n\t\t\t\txkey2 = \"taille\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#999999\",\n\t\t\t\t\t\"#34cb6a\",\n\t\t\t\t];\n\t\t\t\thorizontal2 = true;\n\t\t\t\tdistributed2 = true;\n\t\t\t},\n\t\t\tchart204: () => {\n\t\t\t\ttype_graph2 = \"area\";\n\t\t\t\tdata_chart2 = sau;\n\t\t\t\ttitle_graph2 =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series2 = [\">= 100 ha\", \"total\"];\n\t\t\t\tykey2 = [\"nbexpl_sup_100_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey2 = \"annee\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal2 = false;\n\t\t\t\tdistributed2 = true;\n\t\t\t},\n\t\t\tchart205: () => {\n\t\t\t\ttype_graph2 = \"area\";\n\t\t\t\tdata_chart2 = sau;\n\t\t\t\ttitle_graph2 =\n\t\t\t\t\t\"Évolution du nombre d’exploitations (en millions)\";\n\t\t\t\tname_series2 = [\">= 100 ha\", \"total\"];\n\t\t\t\tykey2 = [\"nbexpl_sup_100_ha\", \"nbexpl_tot\"];\n\t\t\t\txkey2 = \"annee\";\n\t\t\t\tunit2 = \"\";\n\t\t\t\tnb_decimal2 = 0;\n\t\t\t\tcolors_chart2 = [\"#ffe552\", \"#999999\"];\n\t\t\t\thorizontal2 = false;\n\t\t\t\tdistributed2 = true;\n\t\t\t\tanimate2 = false;\n\t\t\t}\n\t\t}\n\t};\n\t// Code to run Scroller actions when new caption IDs come into view\n\tfunction runActions(codes = []) {\n\t\tcodes.forEach((code) => {\n\t\t\tif (id[code] != idPrev[code]) {\n\t\t\t\tif (actions[code][id[code]]) {\n\t\t\t\t\tactions[code][id[code]]();\n\t\t\t\t}\n\t\t\t\tidPrev[code] = id[code];\n\t\t\t}\n\t\t});\n\t}\n\t$: id && runActions(Object.keys(actions)); // Run above code when 'id' object changes\n\n\t// INITIALISATION CODE\n\tdatasets.forEach((geo) => {\n\t\tgetData(`./data/data_${geo}.csv`).then((arr) => {\n\t\t\tlet meta = arr.map((d) => ({\n\t\t\t\tcode: d.code,\n\t\t\t\t//name: d.name,\n\t\t\t\tparent: d.parent ? d.parent : null,\n\t\t\t}));\n\t\t\tlet lookup = {};\n\t\t\tmeta.forEach((d) => {\n\t\t\t\tlookup[d.code] = d;\n\t\t\t});\n\t\t\tmetadata[geo].array = meta;\n\t\t\tmetadata[geo].lookup = lookup;\n\n\t\t\tlet indicators = arr.map((d, i) => ({\n\t\t\t\t...meta[i],\n\t\t\t\t//area: d.area,\n\t\t\t\tsurf_2022: d[\"2022\"],\n\t\t\t\tsurf_2021: d[\"2021\"],\n\t\t\t\tdensity: d.density,\n\t\t\t\tnb_exp: d.nb_exp,\n\t\t\t}));\n\n\t\t\tif (geo == \"departement\") {\n\t\t\t\t[\"nb_exp\", \"surf_2022\"].forEach((key) => {\n\t\t\t\t\tlet values = indicators\n\t\t\t\t\t\t.map((d) => d[key])\n\t\t\t\t\t\t.sort((a, b) => a - b);\n\t\t\t\t\tlet breaks = getBreaks(values);\n\t\t\t\t\tindicators.forEach(\n\t\t\t\t\t\t(d, i) =>\n\t\t\t\t\t\t\t(indicators[i][key + \"_color\"] = getColor(\n\t\t\t\t\t\t\t\td[key],\n\t\t\t\t\t\t\t\tbreaks,\n\t\t\t\t\t\t\t\tcolors.seq,\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t\tdata[geo].indicators = indicators;\n\n\t\t\tlet years = [\n\t\t\t\t2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,\n\t\t\t\t2017, 2018, 2019, 2020, 2021, 2022,\n\t\t\t];\n\n\t\t\tlet timeseries = [];\n\t\t\tarr.forEach((d) => {\n\t\t\t\tyears.forEach((year) => {\n\t\t\t\t\ttimeseries.push({\n\t\t\t\t\t\tcode: d.code,\n\t\t\t\t\t\t//name: d.name,\n\t\t\t\t\t\tvalue: d[year],\n\t\t\t\t\t\tyear,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tdata[geo].timeseries = timeseries;\n\t\t});\n\t});\n\n\t/*getTopo(topojsonFR, 'geog')\n\t.then(geo => {\n\t\tgeo.features.sort((a, b) => a.properties.code.localeCompare(b.properties.code));\n\t\tgeojsonFR = geo;\n\t});*/\n\n\t// Fonction pour convertir le JSON en GeoJSON\n\tfunction convertToGeoJSON(jsonData) {\n\t\tconsole.log(jsonData);\n\t\tif (\n\t\t\t!jsonData ||\n\t\t\t!jsonData.features ||\n\t\t\t!Array.isArray(jsonData.features)\n\t\t) {\n\t\t\tconsole.error(\"Invalid JSON data. Unable to convert to GeoJSON.\");\n\t\t\treturn null; // ou une valeur par défaut appropriée selon votre cas\n\t\t}\n\n\t\tconst features = jsonData.features.map((feature) => ({\n\t\t\ttype: \"Feature\",\n\t\t\tgeometry: feature.geometry,\n\t\t\tproperties: feature.properties, // Si des propriétés sont présentes dans le JSON, vous pouvez les ajouter ici\n\t\t}));\n\n\t\treturn {\n\t\t\ttype: \"FeatureCollection\",\n\t\t\tfeatures: features,\n\t\t};\n\t}\n\n\t// Convertir le JSON en GeoJSON\n\tconst geojsonFR = convertToGeoJSON(topojsonFR);\n\n\tlet horizontal_graph1 = false;\n\tlet distributed_graph1 = false;\n\tlet colors_sau_moyenne = [\"#34cb6a\", \"#FFF\"];\n</script>\n\n<ONSHeader filled={true} center={false} />\n\n<Header\n\tbgcolor=\"#206095\"\n\tbgfixed={true}\n\ttheme=\"dark\"\n\tcenter={false}\n\tshort={true}\n>\n\t<h1>La superficie agricole utilisée</h1>\n\t<p class=\"text-big\" style=\"margin-top: 5px\">\n\t\tEn 2020, l’agriculture occupe 269 000 km2 de l’espace français. En <u\n\t\t\ttitle=\"En Guyane, dont la superficie est le sixième de la métropole, l'agriculture n'utilise que 0,4 % du territoire.\"\n\t\t\tuse:tooltip={{ theme: \"custom-tooltip\" }}>métropole</u\n\t\t>, cela représente <Em color={\"#ffe552\"}>49 % du territoire</Em>. Alors\n\t\tqu'elle <b>diminue régulièrement depuis 50 ans</b>, la\n\t\t<u\n\t\t\ttitle=\"La SAU comprend les terres arables (y compris pâturages temporaires, jachères, cultures sous abri, jardins familiaux...), les surfaces toujours en herbe et les cultures permanentes (vignes, vergers...).\"\n\t\t\tuse:tooltip={{ theme: \"custom-tooltip\" }}\n\t\t\t>superficie agricole utilisée</u\n\t\t> varie peu entre 2010 et 2020 (-1 %).\n\t</p>\n\t<p style=\"margin-top: 20px\">20 février 2024</p>\n\t<p>\n\t\t<Toggle\n\t\t\tlabel=\"Animation {animation ? 'activée' : 'désactivée'}\"\n\t\t\tmono={true}\n\t\t\tbind:checked={animation}\n\t\t/>\n\t</p>\n\t<div style=\"margin-top: 90px;\">\n\t\t<Arrow color=\"white\" {animation}>Faites défiler pour lire la viz.</Arrow\n\t\t>\n\t</div>\n</Header>\n\n<Section>\n\t<h2>\n\t\tL'agriculture occupe près de la moitié de l'espace en métropole, part\n\t\tqui se stabilise.\n\t</h2>\n</Section>\n\n<Media caption=\"Part des terres agricoles en métropole, en %\" col=\"wide\">\n\t<Apexcharts\n\t\ttype_graph=\"bar\"\n\t\tdata={sau}\n\t\tname_series=\"Part de la SAU en métropole !\"\n\t\txkey=\"annee\"\n\t\tykey=\"part_sau\"\n\t\tunit=\" %\"\n\t\tnb_decimal=\"1\"\n\t\thorizontal={horizontal_graph1}\n\t\tdistributed={distributed_graph1}\n\t/>\n</Media>\n\n<Divider />\n\n<Section theme=\"lightblue\">\n\t<p>\n\t\tLes exploitations agricoles sont moins nombreuses à utiliser cet espace\n\t\t: <b>100 000 en moins depuis 2010.</b> Leur SAU moyenne continue d’augmenter.\n\t\tEn 2020, elle s’élève en métropole à 69 ha (contre 55 ha en 2010).\n\t</p>\n\n\t<h2>\n\t\tLa SAU moyenne augmente toujours au même rythme\n\t\t<h2></h2>\n\t</h2></Section\n>\n<Media caption=\"SAU moyenne en métropole, en ha\" col=\"wide\" theme=\"lightblue\">\n\t<Apexcharts\n\t\ttype_graph=\"line\"\n\t\tdata={sau}\n\t\tname_series=\"SAU moyenne en métropole\"\n\t\txkey=\"annee\"\n\t\tykey=\"sau_m_ha\"\n\t\tunit=\" ha\"\n\t\tnb_decimal=\"0\"\n\t\tcolors={colors_sau_moyenne}\n\t/>\n</Media>\n\n<Scroller {threshold} bind:id={id[\"chart\"]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t<Media caption={title_graph} col=\"wide\">\n\t\t\t\t\t\t<Apexcharts\n\t\t\t\t\t\t\t{type_graph}\n\t\t\t\t\t\t\tdata={data_chart}\n\t\t\t\t\t\t\t{name_series}\n\t\t\t\t\t\t\t{xkey}\n\t\t\t\t\t\t\t{ykey}\n\t\t\t\t\t\t\t{unit}\n\t\t\t\t\t\t\t{nb_decimal}\n\t\t\t\t\t\t\tcolors={colors_chart}\n\t\t\t\t\t\t\t{animate}\n\t\t\t\t\t\t\t{horizontal}\n\t\t\t\t\t\t\t{distributed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Media>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"chart00\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tLe nombre d'exploitations de <Em color={\"#5f86af\"}\n\t\t\t\t\t\t>moins de 100 ha</Em\n\t\t\t\t\t> recule tandis que celui des plus grandes augmente. Pour autant,\n\t\t\t\t\t<b\n\t\t\t\t\t\t>les exploitations de moins de 50 ha sont toujours\n\t\t\t\t\t\tmajoritaires</b\n\t\t\t\t\t> (54 % en 2020).\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tLes <Em color={\"#34cb6a\"}\n\t\t\t\t\t\t>exploitations de moins de 20 ha</Em\n\t\t\t\t\t> concentrent les 2/3 de la diminution totale.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tCes petites exploitations restent les plus présentes, mais\n\t\t\t\t\ten 50 ans leur part dans l'ensemble est passée de <b\n\t\t\t\t\t\t>58 % à 38 %</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tA l'opposé, le nombre d'exploitations de <Em\n\t\t\t\t\t\tcolor={\"#34cb6a\"}>plus de 200 ha</Em\n\t\t\t\t\t> augmente d'un tiers entre 2010 et 2020.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tSur plus long terme, les exploitations de <b\n\t\t\t\t\t\t>100 ha et plus</b\n\t\t\t\t\t> sont de plus en plus nombreuses.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart05\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tPlus de 100 000 en 2020, elles représentent un quart du\n\t\t\t\t\ttotal, <b>contre 2 % 50 ans auparavant.</b>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Section theme=\"lightblue\">\n\t<p>\n\t\tLes exploitations spécialisées en <Em color={\"#34cb6a\"}\n\t\t\t>grandes cultures</Em\n\t\t> occupent plus d’un tiers de la SAU en métropole, celles spécialisées dans\n\t\tles <Em color={\"#16456c\"}>élevages bovins</Em> presqu'autant.\n\t</p>\n\n\t<h2>\n\t\tLa SAU moyenne augmente toujours au même rythme\n\t</h2>\n\t\t\t<Media\n\t\t\t\tcaption=\"SAU moyenne en métropole, en ha\"\n\t\t\t\tcol=\"wide\"\n\t\t\t\ttheme=\"lightblue\"\n\t\t\t>\n\t\t\t\t<Apexcharts\n\t\t\t\t\ttype_graph=\"donut\"\n\t\t\t\t\tdata={otex_sau}\n\t\t\t\t\tname_series=\"SAU par OTEX\"\n\t\t\t\t\txkey=\"otex\"\n\t\t\t\t\tykey=\"sau\"\n\t\t\t\t\tunit=\" %\"\n\t\t\t\t\tnb_decimal=\"0\"\n\t\t\t\t/>\n\t\t\t</Media>\n\t\t\t<p>La surface des exploitations varie avec leur spécialisation.\n\n\t\t\t</p>\n\t</Section>\n\n<Section>\n\t<Scroller {threshold} bind:id={id[\"chart2\"]} splitscreen={true}>\n\t\t<div slot=\"background\">\n\t\t\t<figure>\n\t\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<Media caption={title_graph2} col=\"wide\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Media>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</figure>\n\t\t</div>\n\t\n\t\t<div slot=\"foreground\">\n\t\t\t<section data-id=\"chart200\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLe nombre d'exploitations de <Em color={\"#5f86af\"}\n\t\t\t\t\t\t\t>moins de 100 ha</Em\n\t\t\t\t\t\t> recule tandis que celui des plus grandes augmente. Pour autant,\n\t\t\t\t\t\t<b\n\t\t\t\t\t\t\t>les exploitations de moins de 50 ha sont toujours\n\t\t\t\t\t\t\tmajoritaires</b\n\t\t\t\t\t\t> (54 % en 2020).\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"chart201\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes <Em color={\"#34cb6a\"}\n\t\t\t\t\t\t\t>exploitations de moins de 20 ha</Em\n\t\t\t\t\t\t> concentrent les 2/3 de la diminution totale.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"chart202\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCes petites exploitations restent les plus présentes, mais\n\t\t\t\t\t\ten 50 ans leur part dans l'ensemble est passée de <b\n\t\t\t\t\t\t\t>58 % à 38 %</b\n\t\t\t\t\t\t>.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"chart203\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA l'opposé, le nombre d'exploitations de <Em\n\t\t\t\t\t\t\tcolor={\"#34cb6a\"}>plus de 200 ha</Em\n\t\t\t\t\t\t> augmente d'un tiers entre 2010 et 2020.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"chart204\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSur plus long terme, les exploitations de <b\n\t\t\t\t\t\t\t>100 ha et plus</b\n\t\t\t\t\t\t> sont de plus en plus nombreuses.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"chart205\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPlus de 100 000 en 2020, elles représentent un quart du\n\t\t\t\t\t\ttotal, <b>contre 2 % 50 ans auparavant.</b>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t</Scroller>\n</Section>\n\n<ONSFooter />\n\n<style>\n\t/* Styles specific to elements within the demo */\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\t:global(svelte-scroller-foreground section div) {\n\t\tpointer-events: all !important;\n\t}\n\tselect {\n\t\tmax-width: 350px;\n\t}\n\t.chart {\n\t\tmargin-top: 45px;\n\t\twidth: calc(100% - 5px);\n\t}\n\t.chart-full {\n\t\tmargin: 0 20px;\n\t}\n\t.chart-sml {\n\t\tfont-size: 0.85em;\n\t}\n\t/* The properties below make the media DIVs grey, for visual purposes in demo */\n\t.media {\n\t\tbackground-color: #fff;\n\t\tdisplay: -webkit-box;\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t-webkit-box-orient: vertical;\n\t\t-webkit-box-direction: normal;\n\t\t-ms-flex-flow: column;\n\t\tflex-flow: column;\n\t\t-webkit-box-pack: center;\n\t\t-ms-flex-pack: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tcolor: #aaa;\n\t}\n\n\t:global(.tooltip.custom-tooltip) {\n\t\t--tooltip-background-color: #ffe552;\n\t\t--tooltip-box-shadow: 0 1px 8px white;\n\t\t--tooltip-color: black;\n\t\t--tooltip-font-size: 16px;\n\t}\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto 40px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgcolor = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {bgcolor ? bgcolor : themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short class:height-full={!short}>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = grid ? ` grid-${grid}` : '';\n\n\tlet nogrid = !(\"grid-gap\" in document.body.style);\n\t\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: 1fr repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px 1fr);`\n\t\t\t\t: `-ms-grid-rows: 1fr; grid-template-rows: 1fr;`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row}; min-height: ${rowHeight};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"https://www.agriculture.gouv.fr/\">\n\t\t\t{#if theme == 'dark'}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/Logo_du_MAA.png\"\n\t\t\t\talt=\"Ministère de l'Agriculture et de la Souveraineté Alimentaire\"  style=\"width: 20%; height: auto;\"/>\n\t\t\t{:else}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/Logo_du_MAA.png\"\n\t\t\t\talt=\"Ministère de l'Agriculture et de la Souveraineté Alimentaire\" style=\"width: 20%; height: auto;\"/>\n\t\t\t{/if}\n\t\t</a>\n\t\t<ul>\n\t\t\t<li><a href=\"\" class=\"link\" style=\"color: {themes[theme]['text']}\">Nous contacter</a></li>\n\t\t\t<li><a href=\"\" class=\"link\" style=\"color: {themes[theme]['text']}\">Cookies et confidentialité</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tLe contenu est disponible sous licence \n\t\t\t<a\n\t\t\t\thref=\"https://www.gnu.org/licenses/gpl-3.0.html\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">GPL</a>, \n\t\t\t\tsauf indication contraire.\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a.link {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a.link:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a.link:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let filled = false;\n\texport let center = true;\n</script>\n\n<nav style=\"border-bottom-color: {themes[theme]['muted']}; {filled ? 'background-color: ' +  themes[theme]['background'] + ';' : ''}\">\n  <div class=\"col-wide middle\" class:center>\n\t\t<a href=\"https://www.agriculture.gouv.fr/\">\n\t\t\t<picture>\n\t\t\t\t{#if theme == 'dark'}\n\t\t\t\t<img src=\"./img/Logo_du_MAA.png\" alt=\"Ministère de l'Agriculture et de la Souveraineté Alimentaire\" style=\"width: 20%; height: auto;\">\n\t\t\t\t{:else if filled == true}\n\t\t\t\t<img src=\"./img/Logo_du_MAA.png\" alt=\"Ministère de l'Agriculture et de la Souveraineté Alimentaire\" style=\"width: 20%; height: auto;\">\n\t\t\t\t{:else}\n\t\t\t\t<img src=\"./img/Logo_du_MAA.png\" alt=\"Ministère de l'Agriculture et de la Souveraineté Alimentaire\" style=\"width: 20%; height: auto;\">\n\t\t\t\t{/if}\n\t\t\t</picture>\n\t\t</a>\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 146px;\n\t\tmargin-bottom: -46px;\n\t\tborder-bottom: 1px solid #777;\n\t\tz-index: 1;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: -3px;\n\t\tpadding: 0 5px;\n\t}\n\timg {\n\t\twidth: 270px;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach(fn => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t});\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n  let bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: (top, bottom, threshold, parallax, update());\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${fixed ? 'fixed' : 'absolute'}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\r\n      bgContainer.style.cssText = style;\r\n    }\r\n  }\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? (foreground_height - background_height)\r\n\t\t\t\t: (foreground_height - available_space);\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      }\r\n\t\t} else {\r\n\t\t\toffset_top = parallax ?\r\n\t\t\t\tMath.round(top_px - progress * (background_height - available_space)) :\r\n\t\t\t\ttop_px;\r\n      if (!fixed) {\r\n        fixed = true;\r\n        setFixed();\r\n      }\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh}/>\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container class='background-container' bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>",
    "<script>\n    import { InternSet, hierarchy, pack, range, scaleOrdinal, schemeTableau10 } from 'd3';\n    export let bubble_data;\n    const width = 780; //the margin top, bottom, left, right margin offset relative to the radius\n    const padding = 13; // the all padding all around each circle, in pixels\n    const margin = 1; // the all margin all around, in pixels\n    const textColor = 'black'; //the color of the text\n    const fill = '#ccc'; // a static fill color, if no group channel is specified\n    const fillOpacity = 0.9; // the fill opacity of the bubbles\n    const strokeColor = 'none'; // a static stroke around the bubbles\n    const strokeWidth = 3; // the stroke width around the bubbles, if any\n    const strokeOpacity = 1; // the stroke opacity around the bubbles, if any\n    const height = width; // the outer height of the chart, in pixels\n    const marginLeft = margin; // the left margin, in pixels\n    const marginRight = margin; // the right margin, in pixels\n    const marginTop = margin; // the top margin, in pixels\n    const marginBottom = margin; // the bottom margin, in pixels\n  \n    //update link to the desired address path or remove.\n    const link = (d) => ``;\n    // Compute the values.\n    const dVals = bubble_data.map((el) => el);\n    const vVals = bubble_data.map((el) => el.value);\n    const gVals = bubble_data.map((el) => el.id.split('.')[0]);\n    const iVals = range(vVals.length).filter(i => vVals[i] > 0);\n  \n    let groups = iVals.map(i => gVals[i]);\n    groups = new InternSet(groups);\n    const colorScale = scaleOrdinal(groups, schemeTableau10);  \n\n  \n    // // Compute labels.\n    const lVals = bubble_data.map((el) => [...el.id.split('.').pop().split(/(?=[A-Z][a-z])/g), el.value.toLocaleString('fr')].join('\\n'));\n    const tVals = bubble_data.map((el) => `${el.id}\\n${el.value.toLocaleString('fr')}`);\n  \n    const uid = `O-${Math.random().toString(16).slice(2)}`;\n  \n    const root = pack()\n    .size([width - marginLeft - marginRight, height - marginTop - marginBottom])\n    .padding(padding)\n    (hierarchy({children: iVals})\n        .sum(i => vVals[i]));\n  </script>\n    \n  <svg {width} {height} viewBox=\"{-marginLeft} {-marginTop} {width} {height}\" fill={textColor}>\n      {#each root.leaves() as leaf, i}\n        <a href={link === null ? null : link(dVals[leaf.data])} target=\"_blank\" rel=\"noopener noreferrer\">\n          <g class='node' transform=\"translate({(leaf.x)},{(leaf.y)})\">\n            <circle id=\"node-{i}\"\n              stroke={strokeColor} stroke-width={strokeWidth} stroke-opacity={strokeOpacity}\n              fill={gVals ? colorScale(gVals[leaf.data]) : fill == null ? 'none' : fill}\n              fill-opacity={fillOpacity}\n              r={leaf.r}\n            >\n              <title>{tVals[i].split('.').pop()}</title>\n            </circle>\n            <clipPath id={`${uid}-clip-${leaf.data}`}>\n              <circle r={leaf.r}></circle>\n            </clipPath>\n            <text clip-path={`url(${new URL(`#${uid}-clip-${leaf.data}`, location)})`}>\n              {#each `${lVals[leaf.data]}`.split(/\\n/g) as subtext, j}\n                <tspan \n                  x='0'  \n                  y={`${j - `${lVals[leaf.data]}`.split(/\\n/g).length / 2 + 0.85}em`}\n                  fill-opacity={j === `${lVals[leaf.data]}`.split(/\\n/g).length - 1 ? 0.7 : null}\n                  font-size={leaf.r * 0.3}\n                >\n                  {subtext}\n                </tspan>\n              {/each}\n            </text>\n          </g>\n        </a>\n      {/each}\n  </svg>\n  \n  <style>\n    svg {\n      max-width: 100%;\n      height: auto;\n      height: intrinsic;\n      font-size: 10;\n      font-family: sans-serif;\n      text-anchor: middle;\n    }\n  \n    .node {\n      cursor: pointer;\n    }\n  \n    .node:hover {\n      font-weight: 700;\n    }\n  </style>",
    "<!-- Swatches.svelte -->\n<script>\n    export let color;\n    export let swatchWidth = 15;\n    export let swatchHeight = 15;\n    export let marginLeft = 0;\n  </script>\n  \n  <div\n    style=\"\n      display: flex; \n      align-items: center; \n      min-height: 33px; \n      margin-left: {marginLeft}px; \n      font: 10px sans-serif;\n    \"\n  >\n    {#each color.domain() as category}\n      <span\n        style=\"\n          display: inline-flex;\n          align-items: center; \n          margin-right: 1em; \n          --color: {color(category)};\n          --width: {swatchWidth}px;\n          --height: {swatchHeight}px;\n        \"\n      >\n        {category}\n      </span>\n    {/each}\n  </div>\n  \n  <style>\n    span::before {\n      content: \"\";\n      width: var(--width);\n      height: var(--height);\n      margin-right: 0.5em;\n      background: var(--color);\n    }\n  </style>",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>",
    "<script>\n  export let id = \"switch\";\n  export let label = \"Label\";\n  export let mono = false;\n  export let checked;\n</script>\n\n<div class=\"switch\">\n  <input bind:checked {id} type=\"checkbox\" class=\"switch-input\" tabindex=\"0\" />\n  <label for={id} class=\"switch-label\" class:mono>{label}</label>\n</div>\n\n<style>\n  .switch {\n    position: relative;\n    display: inline-block;\n  }\n  .switch-input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  .switch-label::before,\n  .switch-label::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    cursor: pointer;\n  }\n  .switch-label {\n    display: block;\n    cursor: pointer;\n    margin-top: -4px;\n    margin-left: 58px;\n  }\n  .switch-label::before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 48px;\n    height: 24px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-color: #aaa;\n    border-radius: 9999em;\n    -webkit-transition: background-color 0.25s ease;\n    -o-transition: background-color 0.25s ease;\n    transition: background-color 0.25s ease;\n  }\n  .switch-label::after {\n    top: 3px;\n    left: 3px;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background-color: #fff;\n    -webkit-transition: left 0.25s ease;\n    -o-transition: left 0.25s ease;\n    transition: left 0.25s ease;\n  }\n  .switch-input:checked + .switch-label::before {\n    background-color: rgb(32, 96, 149);\n  }\n  .switch-input:checked + .switch-label::after {\n    left: 27px;\n    top: 3px;\n  }\n\n  .mono::before {\n    border: 2px solid white;\n    background: none !important;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}